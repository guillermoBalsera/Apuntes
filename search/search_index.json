{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido a GuimoNotion","text":""},{"location":"#lenguajes-de-programacion","title":"Lenguajes de programaci\u00f3n","text":"Lenguaje Interpretado Usos m\u00e1s comunes Implementado \u00daltima modificaci\u00f3n Java No Aplicaciones empresariales, desarrollo de Android, sistemas distribuidos Python S\u00ed Ciencia de datos, desarrollo web, automatizaci\u00f3n de scripts X 20-08-2024 PHP S\u00ed Desarrollo web, gesti\u00f3n de contenido (CMS), scripts del lado del servidor"},{"location":"#frameworks","title":"Frameworks","text":""},{"location":"#frontend","title":"FrontEnd","text":"Framework/Plataforma Lenguaje Base Usos m\u00e1s comunes Implementado \u00daltima modificaci\u00f3n Android con Kotlin Kotlin Desarrollo de aplicaciones m\u00f3viles nativas para Android Angular TypeScript Desarrollo de aplicaciones web din\u00e1micas y complejas X 25-08-2024 Electron TypeScript Desarrollo de aplicaciones de escritorio multiplataforma utilizando tecnolog\u00edas web Ionic TypeScript Desarrollo de aplicaciones m\u00f3viles h\u00edbridas utilizando tecnolog\u00edas web MkDocs Python Generaci\u00f3n de sitios web de documentaci\u00f3n est\u00e1tica a partir de Markdown X 20-08-2024 React JavaScript Desarrollo de interfaces de usuario para aplicaciones web de una sola p\u00e1gina (SPA) WPF (Windows Presentation Foundation) C# Desarrollo de aplicaciones de escritorio para Windows con interfaces ricas"},{"location":"#backend","title":"BackEnd","text":"Framework Lenguaje Base Usos m\u00e1s comunes Implementado \u00daltima modificaci\u00f3n ASP.NET Core C# Desarrollo de aplicaciones web y servicios API, aplicaciones empresariales Express.js JavaScript Desarrollo del lado del servidor, API REST, aplicaciones de back-end ligeras FastAPI Python Desarrollo de API REST, aplicaciones de back-end de alto rendimiento PHP Laravel PHP Desarrollo web de back-end, aplicaciones CRUD, API REST X 20-08-2024 Spring Boot Java Desarrollo de aplicaciones empresariales, microservicios"},{"location":"#otros","title":"Otros","text":"Nombre Usos m\u00e1s comunes Caracter\u00edsticas clave Implementado \u00daltima modificaci\u00f3n CSS Dise\u00f1o y presentaci\u00f3n de documentos web Controla el estilo visual de elementos HTML, incluye propiedades para colores, fuentes, m\u00e1rgenes, etc. HTML Estructuraci\u00f3n y presentaci\u00f3n de contenido en la web Etiquetas para definir elementos como encabezados, p\u00e1rrafos, enlaces, etc. JSON Intercambio de datos entre aplicaciones, configuraci\u00f3n, almacenamiento de datos Formato ligero y legible por humanos, basado en texto, usa una sintaxis de pares clave-valor X 26-08-2024 Markdown Documentaci\u00f3n, blogs, README files Sintaxis ligera para formatear texto plano, conversi\u00f3n a HTML X 24-08-2024 [Node.js][node Desarrollo de aplicaciones web, servidores, herramientas de desarrollo Entorno de ejecuci\u00f3n para JavaScript en el lado del servidor, permite el uso de JavaScript fuera del navegador X 24-08-2024 XML Intercambio de datos entre aplicaciones, configuraci\u00f3n Estructura jer\u00e1rquica con etiquetas personalizables, extensibilidad X 26-08-2024 YAML Configuraci\u00f3n de aplicaciones, intercambio de datos Formato legible por humanos, jerarqu\u00eda basada en indentaci\u00f3n X 26-08-2024"},{"location":"frameworks/backend/php-laravel/","title":"PHP-Laravel","text":""},{"location":"frameworks/backend/php-laravel/#instalacion-de-laravel-y-creacion-de-un-nuevo-proyecto","title":"Instalaci\u00f3n de Laravel y creaci\u00f3n de un nuevo proyecto","text":""},{"location":"frameworks/backend/php-laravel/#instalar-laravel","title":"Instalar Laravel","text":"<pre><code>composer global require laravel/installer\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#actualizar-laravel","title":"Actualizar Laravel","text":"<pre><code>composer global update laravel/installer\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#version-de-laravel","title":"Versi\u00f3n de Laravel","text":"<pre><code>laravel -v\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#intalar-breeze","title":"Intalar Breeze","text":"<pre><code>composer require laravel/breeze --dev\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#crear-el-proyecto","title":"Crear el proyecto","text":"<pre><code>composer create-project laravel/laravel APi_12\n</code></pre> <p>Elegir la opcion <code>0</code> o <code>blame</code></p> <pre><code>php artisan breeze:install\n</code></pre> <pre><code>php artisan migrate\n</code></pre> <pre><code>npm install\n</code></pre> <pre><code>npm run dev\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#migraciones","title":"Migraciones","text":""},{"location":"frameworks/backend/php-laravel/#crear-migracion","title":"Crear migraci\u00f3n","text":"<p>(Se deben crear en el orden en que se desea que se ejecuten)</p> <pre><code>php artisan:makemigration create_nombre_table\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#configurar-las-migraciones","title":"Configurar las migraciones","text":"<pre><code>Schema::create('users', function (Blueprint $table) {\n   $table-&gt;id();\n   $table-&gt;string('name');\n});\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#migrar","title":"Migrar","text":"<p>(Se migra por orden alfab\u00e9tico)</p> <pre><code>php artisan migrate\n</code></pre> <p>[!NOTE] Se migra por orden alfab\u00e9tico o por fecha de creaci\u00f3n si no se han modificado los nombres de los archivos.</p>"},{"location":"frameworks/backend/php-laravel/#deshacer-la-ultima-migracion","title":"Deshacer la \u00faltima migraci\u00f3n","text":"<pre><code>php artisan migrate:rollback\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#deshacer-todas-las-migraciones","title":"Deshacer todas las migraciones","text":"<pre><code>php artisan migrate:reset\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#deshacer-todas-las-migraciones-y-migrar-de-nuevo","title":"Deshacer todas las migraciones y migrar de nuevo","text":"<pre><code>php artisan migrate:fresh\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#estado-de-las-migraciones","title":"Estado de las migraciones","text":"<pre><code>php artisan migrate:status\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#configuracion","title":"Configuraci\u00f3n","text":"<p>Hay que modificar el archivo .env (Se encuentra en el directorio raiz):</p> <pre><code>DB_CONNECTION=mysql\nDB_HOST=localhost\nDB_PORT=3306\nDB_DATABASE=nombreBD*\nDB_USERNAME=*\nDB_PASSWORD=*\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#modelo","title":"Modelo","text":""},{"location":"frameworks/backend/php-laravel/#crear-nuevo-modelo","title":"Crear nuevo modelo","text":"<pre><code>php artisan make:model Nombre\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#especificar-el-nombre-de-la-tabla-en-la-base-de-datos","title":"Especificar el nombre de la tabla en la base de datos","text":"<p>La tabla es el plural del nombre del modelo creado, pero a veces no lo detecta bien asi que le cambiamos manualmente el nombre para que pueda encontrar la tabla.</p> <pre><code>protected $table = 'tasks_lists';\n</code></pre> <p>Con la primary key pasa algo parecido. Laravel asume que cada tabla tiene declarado un campo llamado <code>id</code>, pero en caso de que no sea as\u00ed debemos sobreescribirlo.</p> <pre><code>protected $primaryKey = 'id';\n</code></pre> <p>La propiedad <code>timestamps</code> nos permite crear los campos <code>updated_at</code> y <code>created_at</code> en la base de datos de forma autom\u00e1tica en la base de datos. Estos campos se actualizan automaticamente al ejercer acciones de actualizado o creaci\u00f3n de la fila.</p> <pre><code>public $timestamps = false;\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#atributos","title":"Atributos","text":"<pre><code>protected $fileable = [\n   'id',\n   'name'\n];\n</code></pre> <p>[!NOTE] Se deben especificar tambi\u00e9n las foreign keys</p>"},{"location":"frameworks/backend/php-laravel/#relaciones","title":"Relaciones","text":""},{"location":"frameworks/backend/php-laravel/#one-to-one","title":"One to One","text":"<p>Se debe crear una funcion <code>hasOne()</code> en uno de los modelos.</p> <pre><code>class Libro extends Model {\n  public function portada() {\n    return $this-&gt;hasOne(Portada::class);\n  }\n}\n</code></pre> <p>Si se desea hacer la relaci\u00f3n bidireccional debe agregarse al otro modelo el metodo <code>belongsTo()</code></p> <pre><code>class Libro extends Model {\n  public function portada() {\n    return $this-&gt;hasOne(Portada::class);\n  }\n}\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#one-to-many","title":"One to Many","text":"<p>Se debe crear la funci\u00f3n <code>hasMany()</code> en el modelo que posee varios objetos.</p> <pre><code>class Autor extends Model\n{\n  public function libros(){\n    return $this-&gt;hasMany(Libro::class);\n  }\n}\n</code></pre> <p>La relaci\u00f3n inversa se establece creando la funci\u00f3n <code>belongsTo()</code> en el otro modelo.</p> <pre><code>class Libro extends Model {\n  public function autor() {\n    return $this-&gt;belongsTo(Autor::class);\n  }\n}\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#many-to-many","title":"Many to Many","text":"<p>En los dos modelos debe definirse el metodo <code>belongToMany()</code></p> <pre><code>class Libro extends Model {\n  public function bibliotecas() {\n    return $this-&gt;belongsToMany(Biblioteca::class);\n  }\n}\n</code></pre> <pre><code>class Biblioteca extends Model {\n  public function libros() {\n    return $this-&gt;belongsToMany(Libro::class);\n  }\n}\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#seeders","title":"Seeders","text":"<p>Los seeders sirven para rellenar la base de datos con informaci\u00f3n inicial.</p> <p>Para crear un seeder usaremos el comando:</p> <pre><code>php artisan make:seeder NombreSeeder\n</code></pre> <p>Se recomienda crear un seeder para cada tabla. En este seeder se crear\u00e1 un m\u00e9todo <code>run</code> donde escribiremos los datos que queremos introducir en la base de datos.</p> <p>Desde la funci\u00f3n <code>run</code> de la clase <code>DatabaseSeeder</code> llamaremos a los distintos seeders</p> <pre><code>$this-&gt;call(NombreSeeder::class);\n</code></pre> <p>Para ejecutar la clase <code>DatabaseSeeder</code> usaremos el comando:</p> <pre><code>php artisan db:seed\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#factories","title":"Factories","text":"<p>Los factories son clases que crean por nosotros datos ficticios autom\u00e1ticamente.</p> <p>Para crear un factorie usaremos el comando:</p> <pre><code>php artisan make:factorie NombreFactorie\n</code></pre> <p>Se recomienda crear un factorie para cada clase.</p> <p>En este factorie debemos completar el atributo <code>model</code> y la funci\u00f3n <code>definition()</code>.</p> <pre><code>class NombreFactory extendes Factory {\n  protected $model = Nombre::class;\n\n  public function definition() {\n    return [\n      'atributo' =&gt; fake()-&gt;name(),\n      'atributo' =&gt; fake()-&gt;name(),\n      'foreign_key' =&gt; ModeloForeignKey::all()-&gt;random()-&gt;id,\n    ];\n  }\n}\n</code></pre> <p>Desde la funci\u00f3n <code>run</code> de la clase Seeder podemos llamar al factorie de la siguiente forma:</p> <pre><code>\\App\\Models\\Nombre::factory(n\u00famero)-&gt;create();\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#resources","title":"Resources","text":"<p>Los resources son herramientas para dar forma a las respuestas JSON de la API, de tal manera que nos permiten personalizar la presentaci\u00f3n de los datos.</p> <p>Para crear un resource usaremos el comando:</p> <pre><code>php artisan make:resource NombreResource\n</code></pre> <p>Puedes personalizar qu\u00e9 campos incluir, renombrarlos y agregar informaci\u00f3n adicional.</p> <pre><code>public function toArray($request)\n{\n    return [\n        'id' =&gt; $this-&gt;id,\n        'titulo' =&gt; $this-&gt;titulo,\n        'contenido' =&gt; $this-&gt;contenido,\n        'fecha' =&gt; $this-&gt;created_at-&gt;format('Y-m-d'),\n        'clave_foranea' =&gt; $this-&gt;nombre_tabla,\n        'clave_foranea' =&gt; $this-&gt;nombre_tabla-&gt;campo_tabla\n    ];\n}\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#collections","title":"Collections","text":"<p>Las collections nos permiten transformar colecciones en respuestas JSON estructuradas.</p> <p>Para crear una colection usaremos el comando:</p> <pre><code>php artisan make:resource ArticuloCollection\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#9-controladores","title":"9. Controladores","text":"<p>Para crear un controlador usaremos el comando:</p> <pre><code>php artisan make:controller NombreApiController --api\n</code></pre> <p>Nos crear\u00e1 los m\u00e9todos index, store, show, update y destroy vacios por defecto.</p>"},{"location":"frameworks/backend/php-laravel/#validacion-de-campos-con-request","title":"Validaci\u00f3n de campos con request","text":"<p>Para validar campos es recomendable el uso de request, que se trata de una clase donde establecemos una serie de reglas que deben cumplir los campos.</p> <p>Si deseamos crear un request utilizamos el siguiente comando:</p> <pre><code>php artisan make:request CreateNombreRequest\n</code></pre> <p>Y dentro de la funci\u00f3n <code>rules</code> personalizamos las reglas de validaci\u00f3n:</p> <pre><code>public function rules()\n    {\n        return [\n            'titulo' =&gt; 'required|string|max:255',\n            'contenido' =&gt; 'required|string',\n            // Otras reglas de validaci\u00f3n seg\u00fan tus necesidades\n        ];\n    }\n</code></pre> <p>Tras esto no necesitariamos validar en el controlador directamente sino que implementariamos el siguiente c\u00f3digo:</p> <pre><code>public function store(CreateNombreRequest $request) {\n  return new NombreResource(Nombre::create($request-&gt;all()));\n}\n</code></pre>"},{"location":"frameworks/backend/php-laravel/#validacion-de-campos-en-el-controlador","title":"Validaci\u00f3n de campos en el controlador","text":"<p>Para validar campos en el controlador implementamos el siguiente c\u00f3digo dentro de nuestra funci\u00f3n:</p> <pre><code>$validator = Validator::make($request-&gt;all(), [\n  \"id\" =&gt; \"required|exists:processes,id\",\n  \"code\" =&gt; \"required|string|max:250\",\n  \"description\" =&gt; \"required\",\n  \"date\" =&gt; \"required\",\n]);\n\nif ($validator-&gt;fails()) {\n  return response()-&gt;json($validator-&gt;errors(), 400);\n}\n</code></pre> <p>El id solo si es necesario comprobarlo si ese objeto existe en la base de datos para una actualizaci\u00f3n.</p>"},{"location":"frameworks/backend/spring-boot/","title":"Index","text":"SPRING BOOT"},{"location":"frameworks/frontend/angular/","title":"Introducci\u00f3n","text":"<p>Angular es un framework de desarrollo web de c\u00f3digo abierto mantenido por Google. Est\u00e1 dise\u00f1ado para facilitar la creaci\u00f3n de aplicaciones web de una sola p\u00e1gina (SPA) al proporcionar una estructura robusta para el desarrollo frontend. Angular utiliza TypeScript como lenguaje principal, aunque tambi\u00e9n puedes escribir c\u00f3digo en JavaScript.</p>"},{"location":"frameworks/frontend/angular/#que-es-angular","title":"\u00bfQu\u00e9 es Angular?","text":"<p>Angular es un framework MVC (Modelo-Vista-Controlador) que permite a los desarrolladores construir aplicaciones din\u00e1micas y de alta calidad con una estructura organizada y eficiente. Utiliza una arquitectura basada en componentes y proporciona herramientas para el manejo de datos, enrutamiento y pruebas, entre otras funcionalidades.</p>"},{"location":"frameworks/frontend/angular/#caracteristicas-principales","title":"Caracter\u00edsticas Principales","text":"<ol> <li> <p>Componentes: Angular organiza la aplicaci\u00f3n en componentes reutilizables que encapsulan la l\u00f3gica, la vista y el estilo. Cada componente es una pieza independiente de la interfaz de usuario.</p> </li> <li> <p>Data Binding: Angular proporciona dos tipos principales de data binding: bidireccional y unidireccional. El data binding bidireccional mantiene sincronizados el modelo y la vista, mientras que el unidireccional fluye desde el modelo hacia la vista.</p> </li> <li> <p>Inyecci\u00f3n de Dependencias: Angular utiliza un sistema de inyecci\u00f3n de dependencias para gestionar la creaci\u00f3n y el suministro de servicios y otros objetos a los componentes.</p> </li> <li> <p>Enrutamiento: Angular tiene un sistema de enrutamiento integrado que permite la navegaci\u00f3n entre diferentes vistas y componentes sin recargar la p\u00e1gina.</p> </li> <li> <p>Directivas: Las directivas son atributos o elementos personalizados que permiten a los desarrolladores extender el HTML y modificar el comportamiento de los elementos del DOM.</p> </li> <li> <p>Servicios: Los servicios son objetos que se utilizan para compartir datos y funcionalidades entre diferentes componentes.</p> </li> </ol>"},{"location":"frameworks/frontend/angular/additional_resources/","title":"Recursos adicionales","text":"<ul> <li>P\u00e1gina oficial de Angular</li> <li>Documentaci\u00f3n oficial de Angular</li> <li>GitHub de Angular</li> </ul>"},{"location":"frameworks/frontend/angular/components/","title":"Componentes","text":""},{"location":"frameworks/frontend/angular/components/#componentes","title":"Componentes","text":"<p>Para generar un nuevo component usamos el comando:</p> <pre><code>ng generate component directorio/nombreComponente\n</code></pre>"},{"location":"frameworks/frontend/angular/components/#estructura-de-un-componente","title":"Estructura de un componente","text":"<pre><code>@Component({\n    standalone: true, /* standalone representa si se trata de un componente standalone o cl\u00e1sico en caso de no aparecer */\n    selector: 'app-component', /* selector representa la forma de llamar al componente desde el html de otro */\n    templateUrl: './component.component.html', /* templateUrl representa la url donde se ubica la template del componente */\n    styleUrl: './component.component.css', /* styleUrl representa la url donde se ubica el archivo que define los estilos del componente */\n})\nexport class Component {\n    /* Aqu\u00ed se define el comportamiento del componente */\n}\n</code></pre>"},{"location":"frameworks/frontend/angular/components/#llamar-a-un-componente-desde-otro","title":"LLamar a un componente desde otro","text":"<p>Si el proyecto es standalone debemos importar el componente que vamos a usar dentro del componente desde el que lo llamaremos:</p> <pre><code>import {Component} from './todo-list-item.component.ts';\n\n@Component({\n    standalone: true,\n    imports: [Component],\n    template: `\n    &lt;ul&gt;\n      &lt;app-component&gt;&lt;/app-component&gt;\n    &lt;/ul&gt;\n  `,\n})\nexport class MainComponent {\n}\n</code></pre> <p>Si el proyecto es cl\u00e1sico debemos importar el componente en <code>app-module.ts</code></p> <pre><code>import {Component} from './todo-list-item.component.ts';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        Component\n        /* Debe declararse para poder ser usado en el proyecto y sus componentes */\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n</code></pre>"},{"location":"frameworks/frontend/angular/components/#manipulacion-del-html","title":"Manipulaci\u00f3n del html","text":"<p>Para mostrar datos en el html usaremos:</p> <pre><code>title = 'this is the title';\n</code></pre> <pre><code>&lt;h1&gt; {{ title }} &lt;/h1&gt;\n</code></pre> <p>Si queremos usar una variable dentro de una etiqueta html para alterar el estilo:</p> <pre><code>color = 'red';\n</code></pre> <pre><code>&lt;p [style.color]=\"color\"&gt;&lt;/p&gt;\n</code></pre> <p>Si queremos mostrar un dato en el html y que a su vez si en el html se modifica se actualice nuestra variable en el typescript , se utiliza <code>two-way-databiding</code>:</p> <pre><code>name = 'William Shakespeare'\n</code></pre> <pre><code>&lt;input type=\"text\" [(ngModel)]=\"name\"&gt;\n</code></pre> <p>Para usar <code>ngModel</code> debemos importar <code>FormsModule</code> y a\u00f1adirlo a las importaciones del <code>app-module.ts</code></p>"},{"location":"frameworks/frontend/angular/components/#bucles-y-condicionales-dentro-del-html","title":"Bucles y condicionales dentro del html","text":"<p>Existen dos formas de hacer bucles y condicionales en el html que explicaremos mediante ejemplos:</p>"},{"location":"frameworks/frontend/angular/components/#ngif-y-ngfor","title":"ngIf y ngFor","text":"<pre><code>nameList = [{name: 'name1', surname: 'surname1'}, {name: 'name2', surname: 'surname2'}];\n</code></pre> <pre><code>&lt;ng-container *ngIf=\"nameList.length &gt; 0\"&gt;\n    &lt;ng-container *ngFor=\"let item of nameList; index as i\"&gt;\n        &lt;p&gt; {{ i }} - {{ item.name }}&lt;/p&gt;\n    &lt;/ng-container&gt;\n&lt;/ng-container&gt;\n</code></pre> <ul> <li>ngIf solo muestra el contenido si la longitud de la lista es mayor que 0</li> <li>ngFor: por cada elemento de la lista muestra una etiqueta <p> con el <code>name</code> del objeto sobre el que est\u00e1 iterando.  <li>La variable <code>index</code> del ngFor representa el n\u00famero de iteraciones, aunque no es obligatorio usarla es recomendable en muchas ocasiones.</li>"},{"location":"frameworks/frontend/angular/components/#if-y-for","title":"@if y @for","text":"<pre><code>@if (nameList.length &lt; 100) {      \n    @for (item of nameList; track item; \n            let i = $index, first = $first, last = $last, \n            odd = $odd, even = $even, count = $count) {\n        &lt;p&gt; {{ i }} - {{ item.name }} - {{ first }} - {{ last }} - {{ odd }} - {{ even }} - {{ count }} &lt;/p&gt;\n    }  \n    @empty {\n        &lt;li&gt;No hay items en la lista&lt;/li&gt;\n    }\n} @else {      \n    &lt;p&gt;Aqu\u00ed hay demasiada gente&lt;/p&gt;    \n}\n</code></pre> <ul> <li><code>@if</code>: solo muestra los datos si la lista tiene menos de 100 elementos</li> <li><code>@for</code>: muestra un parrafo por cada elemento de la lista sobre la que se itera</li> <li><code>$index</code>: representa el n\u00famero de iteraci\u00f3n en el que se encuentra el elemento</li> <li><code>$first</code>: represente si es el primer elemento de la lista</li> <li><code>$last</code>: representa si es el \u00faltimo elemento de la lista</li> <li><code>$odd</code>: representa si la iteracion es impar con respecto al <code>$index</code></li> <li><code>$even</code>: representa si la iteracion es par con respecto al <code>$index</code></li> <li><code>$count</code>: representa el n\u00famero de iteraciones totales</li> <li><code>@empty</code>: muestra los datos si la coleccio\u00f3n sobre la que se est\u00e1 iterando est\u00e1 vac\u00eda</li> <li><code>@else</code>: muestra los datos si no se cumple la condici\u00f3n del <code>@if</code></li> </ul>"},{"location":"frameworks/frontend/angular/installation/","title":"Instalaci\u00f3n y creaci\u00f3n de un nuevo proyecto","text":""},{"location":"frameworks/frontend/angular/installation/#intalar-nodejs","title":"Intalar node.js","text":"<p>Lo primero que debemos hacer es instalar node.js para el manejo de dependencias y la creaci\u00f3n del proyecto y sus respectivos componentes.</p>"},{"location":"frameworks/frontend/angular/installation/#instalar-angular","title":"Instalar Angular","text":"<p>Para instalar Angular de forma global tenemos que utilizar el comando:</p> <pre><code>npm install -g @angular/cli\n</code></pre> <p>Para instalar Angular en un proyecto tenemos que utilizar el comando desde la terminal ubic\u00e1ndose en el proyecto:</p> <pre><code>npm install @angular/cli\n</code></pre> <p>Verificamos la instalci\u00f3n son el comando:</p> <pre><code>ng version\n</code></pre> <p>Si no nos permite comprobar la versi\u00f3n de Angular utilizaremos el siguiente comando:</p> <pre><code>Set-ExecutionPolicy - ExecutionPolicy RemoteSigned -Scope CurrentUser\n</code></pre>"},{"location":"frameworks/frontend/angular/installation/#creacion-de-un-nuevo-proyecto","title":"Creaci\u00f3n de un nuevo proyecto","text":"<p>Antes de crear nuestro proyecto debemos decidir que clase de proyecto queremos usar standalone o -cl\u00e1sico_:</p> <ul> <li>Un proyecto standalone en Angular es una forma m\u00e1s reciente de configurar y desarrollar aplicaciones que permite   omitir el uso de NgModules para la organizaci\u00f3n del c\u00f3digo. Este enfoque fue introducido en Angular v14 y tiene como   objetivo simplificar la estructura del proyecto y hacer que el desarrollo de componentes sea m\u00e1s directo y menos   dependiente de los m\u00f3dulos tradicionales.</li> <li>Un proyecto no standalone o cl\u00e1sico es la forma tradicional de construir aplicaciones Angular, utilizando NgModules   para agrupar componentes, directivas, pipes, y servicios en unidades reutilizables.</li> </ul> <p>Para crear un nuevo proyecto standalone en Angular utilizamos en comando:</p> <pre><code>ng new nombreAplicacion\n</code></pre> <p>Si queremos crear un nuevo proyecto cl\u00e1sico:</p> <pre><code>ng new nombreAplicacion --standalone=false\n</code></pre> <p>El archivo package.json muestra las dependencias instaladas, la versi\u00f3n de angular y los comandos habilitados por Angular en el proyecto.</p> <p>Para iniciar el proyecto usamos el comando:</p> <pre><code>ng serve\n</code></pre>"},{"location":"frameworks/frontend/angular/routes/","title":"Rutas","text":"<p>En el <code>app-routing.module.ts</code> se establecen las rutas de la siguiente manera:</p> <pre><code>const routes = [\n    {\n        path: 'route',\n        component: Component\n    },\n    {\n        path: 'route',\n        component: Component\n    }\n];\n</code></pre>"},{"location":"frameworks/frontend/angular/routes/#ruta-por-defecto","title":"Ruta por defecto","text":"<p>Para a\u00f1adir una ruta por defecto:</p> <pre><code>{\n    path: '', redirectTo: '/', pathMatch: 'full'\n}\n</code></pre>"},{"location":"frameworks/frontend/angular/routes/#rutas-hijas","title":"Rutas hijas","text":"<p>Si se quiere establecer una ruta como hija de otra:</p> <pre><code>const routes: Routes = [\n    {\n        path: 'father',\n        component: FatherComponent,\n        children: [\n            {\n                path: 'child',\n                component: ChildComponent\n            }\n        ]\n    }];\n</code></pre> <p>De tal forma que la ruta para acceder al <code>component</code> ser\u00eda <code>father/child</code>, adem\u00e1s de que se aplicar\u00eda a trav\u00e9s del <code>&lt;router-outlet&gt;&lt;/router-outlet&gt;</code> en caso de haberlo.</p>"},{"location":"frameworks/frontend/angular/routes/#envio-de-informacion-en-la-ruta","title":"Envio de informaci\u00f3n en la ruta","text":"<p>Si queremos enviar alg\u00fan dato en la url para obtenerla en el componente al que se navega:</p> <pre><code>{\n    path: 'detail/:detailInfo', component: DetailComponent\n}\n</code></pre> <p>La mejor forma de organizar las rutas de una web ser\u00eda tener tres rutas principales:</p> <ul> <li>Login</li> <li>Registro</li> <li>Main: esta ser\u00eda la ruta padre de todas las dem\u00e1s, de manera que as\u00ed podr\u00edamos tener una p\u00e1gina base con su respectivo   men\u00fa y caracter\u00edsticas comunes y las hijas que las compartir\u00edan.</li> </ul>"},{"location":"frameworks/frontend/angular/routes/#navegacion","title":"Navegaci\u00f3n","text":""},{"location":"frameworks/frontend/angular/routes/#navegar-desde-html","title":"Navegar desde html","text":"<p>Para navegar a una ruta usaremos: </p> <pre><code>[routerLink]=\"['/route']\"\n</code></pre> <p>Para navegar a una ruta hija usaremos:</p> <pre><code>[routerLink]=\"['/father/child']\n</code></pre> <p>Para enviar informaci\u00f3n en la ruta usaremos: </p> <pre><code>[routerLink]=\"['/detail', detailInfo]\"`\n</code></pre> <p>Para acceder a los par\u00e1metros de la ruta primero se debe implementar:</p> <pre><code>import {ActivatedRoute} from '@angular/router';\n\nconstructor(private route: ActivatedRoute) { }\n\nconst routeParams = this.route.snapshot.paramMap;\nconst detailInfo = routeParams.get('detailInfo');\n</code></pre>"},{"location":"frameworks/frontend/angular/routes/#navegar-desde-typescript","title":"Navegar desde typescript","text":""},{"location":"frameworks/frontend/mkdocs/","title":"Introducci\u00f3n","text":"<p>MkDocs es una herramienta de generaci\u00f3n de sitios est\u00e1ticos que se centra en la creaci\u00f3n de documentaci\u00f3n de proyectos. Es f\u00e1cil de configurar y permite generar documentaci\u00f3n elegante usando Markdown.</p>"},{"location":"frameworks/frontend/mkdocs/#caracteristicas-principales","title":"Caracter\u00edsticas Principales","text":"<ul> <li>Simplicidad: Usa Markdown para escribir tus documentos.</li> <li>Temas: Incluye varios temas atractivos, incluyendo Material Design.</li> <li>Despliegue f\u00e1cil: Publica en GitHub Pages, GitLab Pages, o tu servidor preferido.</li> </ul>"},{"location":"frameworks/frontend/mkdocs/#instalacion","title":"Instalaci\u00f3n","text":"<p>Para instalar MkDocs, necesitas tener Python y <code>pip</code> instalados en tu sistema.</p> <pre><code>pip install mkdocs\n</code></pre>"},{"location":"frameworks/frontend/mkdocs/#verificar-la-instalacion","title":"Verificar la Instalaci\u00f3n","text":"<p>Para asegurarte de que MkDocs se ha instalado correctamente, ejecuta el siguiente comando:</p> <pre><code>mkdocs --version\n</code></pre> <p>Deber\u00edas ver la versi\u00f3n de MkDocs que has instalado.</p>"},{"location":"frameworks/frontend/mkdocs/#creacion-de-un-proyecto-nuevo","title":"Creaci\u00f3n de un Proyecto Nuevo","text":"<p>Para crear un proyecto nuevo, usa el siguiente comando:</p> <pre><code>mkdocs new nombre-de-tu-proyecto\n</code></pre> <p>Esto crear\u00e1 una estructura b\u00e1sica de archivos y carpetas que puedes empezar a personalizar.</p>"},{"location":"frameworks/frontend/mkdocs/#estructura-de-carpetas","title":"Estructura de Carpetas","text":"<p>Un proyecto t\u00edpico de MkDocs tendr\u00e1 la siguiente estructura de carpetas:</p> <pre><code>nombre-de-tu-proyecto/\n\u251c\u2500\u2500 docs/\n\u2502   \u2514\u2500\u2500 index.md\n\u2514\u2500\u2500 mkdocs.yml\n</code></pre> <ul> <li>docs/: Aqu\u00ed es donde ir\u00e1n todos tus archivos de documentaci\u00f3n en formato Markdown.</li> <li>mkdocs.yml: Este es el archivo de configuraci\u00f3n principal de MkDocs.</li> </ul>"},{"location":"frameworks/frontend/mkdocs/#configuracion-basica","title":"Configuraci\u00f3n B\u00e1sica","text":"<p>El archivo mkdocs.yml es donde configurar\u00e1s tu sitio de documentaci\u00f3n. Aqu\u00ed un ejemplo b\u00e1sico:</p> <pre><code>site_name: Mi Proyecto\ntheme:\n  name: material\n\nnav:\n  - Inicio: index.md\n  - Acerca de: about.md\n</code></pre>"},{"location":"frameworks/frontend/mkdocs/#personalizacion","title":"Personalizaci\u00f3n","text":"<p>Puedes personalizar tu sitio modificando el archivo mkdocs.yml. Algunas opciones comunes incluyen:</p> <ul> <li>Cambiar el tema: Hay varios temas disponibles que puedes usar.</li> <li>A\u00f1adir un favicon: Puedes a\u00f1adir un \u00edcono personalizado a tu sitio.</li> </ul> <pre><code>extra:\n  favicon: 'img/logo.png'\n</code></pre>"},{"location":"frameworks/frontend/mkdocs/#desarrollando-el-sitio","title":"Desarrollando el Sitio","text":"<p>Durante el desarrollo, puedes usar el servidor de desarrollo integrado de MkDocs para ver los cambios en tiempo real:</p> <pre><code>mkdocs serve\n</code></pre> <p>Esto abrir\u00e1 un servidor en http://127.0.0.1:8000/ o http://localhost:8000/ donde podr\u00e1s ver tu sitio.</p>"},{"location":"frameworks/frontend/mkdocs/#despliegue-del-sitio","title":"Despliegue del Sitio","text":"<p>Para desplegar tu sitio, primero debes construirlo con el comando:</p> <pre><code>mkdocs build\n</code></pre> <p>Esto generar\u00e1 una carpeta site/ con todos los archivos est\u00e1ticos de tu sitio. Puedes subir esta carpeta a cualquier servidor o servicio de hosting, como GitHub Pages.</p>"},{"location":"frameworks/frontend/mkdocs/#admonitions","title":"Admonitions","text":"<p>Admonitions son bloques de contenido en documentaci\u00f3n que se utilizan para resaltar y categorizar informaci\u00f3n importante, notas, advertencias o recomendaciones. Su prop\u00f3sito es captar la atenci\u00f3n del lector y proporcionar contexto adicional de manera visualmente destacada. Estos bloques pueden variar en apariencia y estilo seg\u00fan el sistema de documentaci\u00f3n o el tema que est\u00e9s utilizando.</p> <p>Para instalarlas a\u00f1adiremos a nuestro fichero <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - admonition\n</code></pre> <p>Tipos de admonition:   - note   - abstract   - info   - tip   - success   - question   - warning   - failure   - danger   - bug   - example   - quote</p> <p>Se usan de la siguiente manera:</p> <pre><code>!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n</code></pre> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"frameworks/frontend/mkdocs/#ejemplo-completo-de-mkdocsyml","title":"Ejemplo Completo de mkdocs.yml","text":"<p>Aqu\u00ed tienes un ejemplo m\u00e1s completo de un archivo mkdocs.yml:</p> <pre><code>site_name: Documentaci\u00f3n de Ejemplo\n\ntheme:\n  name: material\n  language: es\n  logo: img/logo.png\n  favicon: 'img/logo.png'\n  features:\n    - content.code.copy\n    - navigation.instant\n    - navigation.instant.progress\n    - navigation.tracking\n    - navigation.tabs\n    - navigation.top\n  font:\n    text: Rubik\n    code: Roboto Mono\n\nnav:\n  - Inicio: index.md\n  - Gu\u00eda de Usuario:\n      - Instalaci\u00f3n: user-guide/installation.md\n      - Configuraci\u00f3n: user-guide/configuration.md\n  - Referencia: reference.md\n  - Acerca de: about.md\n\n\nextra_css:\n  - stylesheets/style.css\n\nmarkdown_extensions:\n  - admonition\n\nextra:\n  consent:\n    title: Cookie consent\n    description: &gt;-\n      Usamos cookies para reconocer tus visitas y preferencias repetidas, \n      as\u00ed como para medir la efectividad de nuestra documentaci\u00f3n y si \n      los usuarios encuentran lo que buscan. Con tu consentimiento, \n      nos ayudas a mejorar nuestra documentaci\u00f3n.\n</code></pre>"},{"location":"frameworks/frontend/mkdocs/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n Oficial de MkDocs</li> <li>GitHub de Material para MkDocs</li> <li>P\u00e1gina de Material para MkDocs</li> </ul>"},{"location":"languages/bashScript/","title":"Bash Script","text":"<pre><code>#!/bin/bash\n\necho \"Bienvenido a BASH\"\n\n</code></pre>"},{"location":"languages/python/","title":"Python","text":""},{"location":"languages/python/#funcionalidades-basicas","title":"Funcionalidades b\u00e1sicas","text":""},{"location":"languages/python/#print","title":"Print","text":"<pre><code>print(\"Hola mundo\")\n</code></pre> <pre><code>print(\"Primera l\u00ednea\\nSegunda l\u00ednea\\nTercera l\u00ednea\")\n</code></pre> <pre><code>print(\"Primera l\u00ednea\", end=\" \")\nprint(\"Segunda l\u00ednea\", end=\" \")\nprint(\"Tercera l\u00ednea\")\n</code></pre>"},{"location":"languages/python/#input","title":"Input","text":"<pre><code>nombre = input(\"\u00bfCu\u00e1l es tu nombre? \")\n</code></pre>"},{"location":"languages/python/#longitud","title":"Longitud","text":"<pre><code>mi_lista = [1, 2, 3, 4, 5]\nprint(len(mi_lista))  # Output: 5\n</code></pre>"},{"location":"languages/python/#type","title":"Type","text":"<pre><code>print(type(123))          # Output: &lt;class 'int'&gt;\nprint(type(3.14))         # Output: &lt;class 'float'&gt;\nprint(type(\"Hola\"))       # Output: &lt;class 'str'&gt;\nprint(type([1, 2, 3]))    # Output: &lt;class 'list'&gt;\n</code></pre>"},{"location":"languages/python/#conversion-de-tipos","title":"Conversi\u00f3n de tipos","text":"<pre><code>print(int(\"123\"))       # Output: 123\nprint(float(\"3.14\"))    # Output: 3.14\nprint(str(123))         # Output: '123'\nprint(list(\"Hola\"))     # Output: ['H', 'o', 'l', 'a']\n</code></pre>"},{"location":"languages/python/#range","title":"Range","text":"<p>La funci\u00f3n range() se utiliza para generar una secuencia de n\u00fameros. Com\u00fanmente se usa en bucles for.</p> <pre><code>range(inicio, fin, paso)\n</code></pre> <p>Note</p> <p><code>inicio</code>: El valor inicial de la secuencia (por defecto es 0). <code>fin</code>: El valor final de la secuencia (no se incluye en la secuencia). <code>paso</code>: El incremento entre los n\u00fameros (por defecto es 1).  </p>"},{"location":"languages/python/#max-y-min","title":"Max y Min","text":"<pre><code>mi_lista = [1, 2, 3, 4, 5]\nprint(max(mi_lista))  # Output: 5\nprint(min(mi_lista))  # Output: 1\n</code></pre> <pre><code>cadena = \"python\"\nprint(max(cadena))  # Output: 'y'\n\ncadena = \"python\"\nprint(min(cadena))  # Output: 'P'\n</code></pre> <pre><code>lista = [\"manzana\", \"banana\", \"cereza\", \"uva\"]\nprint(max(lista))  # Output: 'uva'\n\nlista = [\"manzana\", \"banana\", \"cereza\", \"uva\"]\nprint(min(lista))  # Output: 'banana'\n</code></pre> <p>Note</p> <p>Las comparaciones de cadenas de texto se hacen car\u00e1cter por car\u00e1cter en el orden de sus valores ASCII</p>"},{"location":"languages/python/#sorted","title":"Sorted","text":"<pre><code>mi_lista = [5, 2, 3, 1, 4]\nprint(sorted(mi_lista))  # Output: [1, 2, 3, 4, 5]\n</code></pre>"},{"location":"languages/python/#zip","title":"Zip","text":"<p>La funci\u00f3n zip() combina varios iterables, emparejando elementos en tuplas.</p> <pre><code>nombres = [\"Juan\", \"Maria\", \"Pedro\"]\nedades = [30, 25, 40]\ncombinados = zip(nombres, edades)\nprint(list(combinados))  # Output: [('Juan', 30), ('Maria', 25), ('Pedro', 40)]\n</code></pre>"},{"location":"languages/python/#variables","title":"Variables","text":""},{"location":"languages/python/#arrays","title":"Arrays","text":"<p>Note</p> <p>Los elementos de las listas pueden ser de distintos tipos</p>"},{"location":"languages/python/#declarar-una-lista-vacia","title":"Declarar una lista vacia","text":"<pre><code>mi_lista = []\n</code></pre>"},{"location":"languages/python/#declarar-una-lista-con-valores","title":"Declarar una lista con valores","text":"<pre><code>lista = [1, 2, 3, 4, 5]\n</code></pre>"},{"location":"languages/python/#anadir-un-elemento-al-final-de-la-lista","title":"A\u00f1adir un elemento al final de la lista","text":"<pre><code>lista.append(6)\n</code></pre>"},{"location":"languages/python/#eliminar-un-elemento-de-la-lista-por-su-indice","title":"Eliminar un elemento de la lista por su indice","text":"<pre><code>del lista[2]\n</code></pre>"},{"location":"languages/python/#obtener-la-longitud-de-la-lista","title":"Obtener la longitud de la lista","text":"<pre><code>longitud = len(lista)\n</code></pre>"},{"location":"languages/python/#recorrer-una-lista","title":"Recorrer una lista","text":"<pre><code>for elemento in lista:\n    print(elemento)\n</code></pre>"},{"location":"languages/python/#saber-si-un-elemento-se-encuentra-en-la-lista","title":"Saber si un elemento se encuentra en la lista","text":"<pre><code>if 3 in lista:\n    print(\"El elemento 3 est\u00e1 en la lista\")\n</code></pre>"},{"location":"languages/python/#tuplas","title":"Tuplas","text":"<p>Note</p> <p>Son similares a las listas, pero son inmutables, es decir, no se pueden modificar despu\u00e9s de haber sido creadas.</p>"},{"location":"languages/python/#declarar-una-tupla","title":"Declarar una tupla","text":"<pre><code>tupla = (1, 2, 3, \"cuatro\")\n</code></pre>"},{"location":"languages/python/#desempaquetado-de-una-tupla","title":"Desempaquetado de una tupla","text":"<pre><code>tupla_empaquetada = 1, 2, 3\na, b, c = tupla_empaquetada\nprint(a, b, c)\n</code></pre>"},{"location":"languages/python/#diccionarios","title":"Diccionarios","text":""},{"location":"languages/python/#declarar-un-diccionario","title":"Declarar un diccionario","text":"<pre><code>mi_diccionario = {\"nombre\": \"Juan\", \"edad\": 30, \"ciudad\": \"Madrid\"}\n</code></pre>"},{"location":"languages/python/#anadir-elementos-a-un-diccionario","title":"A\u00f1adir elementos a un diccionario","text":"<pre><code>mi_diccionario[\"profesion\"] = \"Programador\"\n</code></pre>"},{"location":"languages/python/#eliminar-elementos-de-un-diccionario","title":"Eliminar elementos de un diccionario","text":"<pre><code>del mi_diccionario[\"ciudad\"]\n</code></pre>"},{"location":"languages/python/#longitud-de-un-diccionario","title":"Longitud de un diccionario","text":"<pre><code>longitud = len(mi_diccionario)\n</code></pre>"},{"location":"languages/python/#iterar-sobre-un-diccionario","title":"Iterar sobre un diccionario","text":"<pre><code># Iterar sobre claves\nfor clave in mi_diccionario:\n    print(clave)\n\n# Iterar sobre valores\nfor valor in mi_diccionario.values():\n    print(valor)\n\n# Iterar sobre pares clave-valor\nfor clave, valor in mi_diccionario.items():\n    print(clave, valor)\n</code></pre>"},{"location":"languages/python/#conjuntos","title":"Conjuntos","text":""},{"location":"languages/python/#declarar-un-conjunto","title":"Declarar un conjunto","text":"<pre><code>mi_conjunto = {1, 2, 3, 4, 5}\n</code></pre>"},{"location":"languages/python/#declarar-un-conjunto-vacio","title":"Declarar un conjunto vacio","text":"<pre><code>conjunto_vacio = set()\n</code></pre>"},{"location":"languages/python/#anadir-elementos-a-un-conjunto","title":"A\u00f1adir elementos a un conjunto","text":"<pre><code>mi_conjunto.add(6)\n</code></pre>"},{"location":"languages/python/#eliminar-elementos-de-un-conjunto","title":"Eliminar elementos de un conjunto","text":"<pre><code>mi_conjunto.remove(3)\n</code></pre>"},{"location":"languages/python/#iteracion-sobre-un-conjunto","title":"Iteracion sobre un conjunto","text":"<pre><code>for elemento in mi_conjunto:\n    print(elemento)\n</code></pre>"},{"location":"languages/python/#unir-conjuntos","title":"Unir conjuntos","text":"<pre><code>conjunto1 = {1, 2, 3}\nconjunto2 = {3, 4, 5}\nunion = conjunto1.union(conjunto2)\n</code></pre>"},{"location":"languages/python/#interseccion-entre-dos-conjuntos","title":"Interseccion entre dos conjuntos","text":"<pre><code>conjunto1 = {1, 2, 3}\nconjunto2 = {3, 4, 5}\ninterseccion = conjunto1.intersection(conjunto2) #Output: 3\n</code></pre>"},{"location":"languages/python/#diferencia-entre-dos-conjuntos","title":"Diferencia entre dos conjuntos","text":"<pre><code>conjunto1 = {1, 2, 3}\nconjunto2 = {3, 4, 5}\ndiferencia  = conjunto1.difference(conjunto2) # Output: {1, 2}\n</code></pre> <pre><code>conjunto1 = {1, 2, 3}\nconjunto2 = {3, 4, 5}\ndiferencia  = conjunto2.difference(conjunto1) # Output: {4, 5}\n</code></pre> <p>Note</p> <p>Cuando hacemos <code>conjunto1.difference(conjunto2)</code>, obtenemos los elementos que est\u00e1n en conjunto1 pero no en conjunto2. Si hacemos <code>conjunto2.difference(conjunto1)</code> obtenemos los elementos que est\u00e1n en conjunto2 pero no en conjunto1.</p>"},{"location":"languages/python/#estructuras-de-control","title":"Estructuras de control","text":""},{"location":"languages/python/#if","title":"If","text":"<pre><code>if edad &gt;= 18:\n    print(\"Eres mayor de edad\")\nelse:\n    print(\"Eres menor de edad\")\n</code></pre>"},{"location":"languages/python/#while","title":"While","text":"<pre><code>contador = 0\nwhile contador &lt; 5:\n    print(\"El contador es:\", contador)\n    contador += 1\n</code></pre>"},{"location":"languages/python/#for","title":"For","text":"<pre><code>frutas = [\"manzana\", \"banana\", \"cereza\"]\nfor fruta in frutas:\n    print(fruta)\n</code></pre> <pre><code>for contador in range(5):\n    print(\"El contador es:\", contador)\n</code></pre>"},{"location":"languages/python/#funciones","title":"Funciones","text":"<pre><code>def suma(a, b):\n    \"\"\"Esta funci\u00f3n devuelve la suma de dos n\u00fameros.\"\"\"\n    return a + b\n\nprint(suma(2, 3))\n</code></pre> <pre><code>def saludar(nombre):\n    \"\"\"Esta funci\u00f3n imprime un saludo.\"\"\"\n    print(\"\u00a1Hola,\", nombre, \"!\")\n\nsaludar(\"juan\")\n</code></pre>"},{"location":"languages/python/#desempaquetado-de-argumentos","title":"Desempaquetado de Argumentos","text":"<pre><code>def sumar(*args):\n    total = 0\n    for numero in args:\n        total += numero\n    return total\n\nresultado = sumar(1, 2, 3, 4, 5)\nprint(resultado)  # Output: 15\n</code></pre> <p>Note</p> <p>Puedes pasar un n\u00famero variable de argumentos a una funci\u00f3n utilizando <code>*args</code>. Esto permite que una funci\u00f3n acepte cualquier n\u00famero de argumentos posicionales.</p>"},{"location":"languages/python/#argumentos-de-palabras-clave-arbitrarios","title":"Argumentos de Palabras Clave Arbitrarios","text":"<pre><code>def imprimir_informacion(**kwargs):\n    for clave, valor in kwargs.items():\n        print(clave + \":\", valor)\n\nimprimir_informacion(nombre=\"Juan\", edad=30, ciudad=\"Ciudad de M\u00e9xico\")\n</code></pre> <p>Note</p> <p>De manera similar al desempaquetado de argumentos, puedes pasar un n\u00famero variable de argumentos de palabras clave utilizando <code>**kwargs</code>.</p>"},{"location":"languages/python/#documentacion-de-funciones","title":"Documentaci\u00f3n de funciones","text":"<pre><code>def suma(a, b):\n    \"\"\"Esta funci\u00f3n devuelve la suma de dos n\u00fameros.\"\"\"\n    return a + b\n\nhelp(suma) # Muestra la cadena de documentaci\u00f3n de la funci\u00f3n\n</code></pre>"},{"location":"languages/python/#objetos","title":"Objetos","text":""},{"location":"languages/python/#definir-una-clase","title":"Definir una clase","text":"<pre><code>class Persona:\n    def __init__(self, nombre, edad): # Contructor\n        self.nombre = nombre\n        self.edad = edad\n\n    def saludar(self):\n        print(f\"Hola, mi nombre es {self.nombre} y tengo {self.edad} a\u00f1os.\")\n</code></pre>"},{"location":"languages/python/#crear-un-objeto","title":"Crear un objeto","text":"<pre><code>juan = Persona(\"Juan\", 30)\n</code></pre>"},{"location":"languages/python/#acceder-a-los-atributos-del-objeto","title":"Acceder a los atributos del objeto:","text":"<pre><code>print(juan.nombre)\n</code></pre>"},{"location":"languages/python/#modificar-los-atributos-de-un-objeto","title":"Modificar los atributos de un objeto","text":"<pre><code>juan.nombre = \"Juan Carlos\"\n</code></pre>"},{"location":"languages/python/#comprobar-si-un-objeto-tiene-un-atributo-especifico","title":"Comprobar si un objeto tiene un atributo especifico","text":"<pre><code>print(hasattr(juan, \"apellidos\")) # Output: False\n</code></pre>"},{"location":"languages/python/#obtener-el-valor-de-un-atributo-si-existe-o-si-no-devolver-un-mensaje-predefinido","title":"Obtener el valor de un atributo si existe o si no devolver un mensaje predefinido","text":"<pre><code>print(getattr(juan, \"apellidos\", \"El objeto 'juan' tiene apellidos definidos\"))\n# Output: El objeto 'juan' no tiene apellidos definido\n</code></pre>"},{"location":"languages/python/#ordenar-objetos","title":"Ordenar objetos","text":"<pre><code>personas_ordenadas = sorted(personas, key=lambda x: x.edad)\n\npersonas.sort(key=lambda x: x.edad)\n</code></pre>"},{"location":"languages/python/#manejo-de-ficheros-y-directorios","title":"Manejo de ficheros y directorios","text":""},{"location":"languages/python/#crear-un-directorio","title":"Crear un directorio","text":"<pre><code>import os\n\nos.makedirs(\"nombre_directorio\")\n</code></pre>"},{"location":"languages/python/#crear-un-archivo","title":"Crear un archivo","text":"<pre><code>nombre_archivo = \"nuevo_archivo.txt\"\n\nwith open(nombre_archivo, 'w') as archivo:\n    archivo.write(\"Este es el contenido del archivo.\\n\")\n</code></pre>"},{"location":"languages/python/#listar-el-contenido-de-un-directorio","title":"Listar el contenido de un directorio","text":"<pre><code>contenido_directorio = os.listdir()\n\nfor elemento in contenido_directorio:\n    print(elemento)\n</code></pre>"},{"location":"languages/python/#listar-el-contenido-de-un-directorio-y-el-contenido-de-sus-subdirectorios","title":"Listar el contenido de un directorio y el contenido de sus subdirectorios","text":"<pre><code>import os\n\ndef listar_contenido_directorio(directorio):\n    for directorio_actual, subdirectorios, archivos in os.walk(directorio):\n        print(f\"Contenido de {directorio_actual}:\")\n\n        for archivo in archivos:\n            print(os.path.join(directorio_actual, archivo))\n\n        for subdirectorio in subdirectorios:\n            print(os.path.join(directorio_actual, subdirectorio))\n\ndirectorio = \"ruta/al/directorio\"\n\nlistar_contenido_directorio(directorio)\n</code></pre>"},{"location":"languages/python/#renombrar-un-archivo-o-directorio","title":"Renombrar un archivo o directorio","text":"<pre><code>import os\n\nnombre_original = \"antiguo_nombre.txt\"\nnuevo_nombre = \"nuevo_nombre.txt\"\n\nos.rename(nombre_original, nuevo_nombre)\n</code></pre>"},{"location":"languages/python/#eliminar-un-archivo","title":"Eliminar un archivo","text":"<pre><code>import os\n\nnombre_archivo_a_eliminar = \"archivo_a_eliminar.txt\"\n\nos.remove(nombre_archivo_a_eliminar)\n</code></pre>"},{"location":"languages/python/#eliminar-un-directorio-y-su-contenido","title":"Eliminar un directorio y su contenido","text":"<pre><code>import shutil\n\nnombre_directorio_a_eliminar = \"directorio_a_eliminar\"\n\nshutil.rmtree(nombre_directorio_a_eliminar)\n</code></pre>"},{"location":"languages/python/#mover-archivo","title":"Mover archivo","text":"<pre><code>import shutil\n\nubicacion_original = \"ruta/al/archivo/original.txt\"\nubicacion_destino = \"ruta/a/la/ubicacion/de/destino/archivo.txt\"\n\nshutil.move(ubicacion_original, ubicacion_destino)\n</code></pre>"},{"location":"languages/python/#mover-directorio","title":"Mover directorio","text":"<pre><code>ubicacion_directorio_original = \"ruta/al/directorio/original\"\nubicacion_directorio_destino = \"ruta/a/la/ubicacion/de/destino/directorio\"\n\nshutil.move(ubicacion_directorio_original, ubicacion_directorio_destino)\n</code></pre>"},{"location":"languages/python/#lectura-de-ficheros","title":"Lectura de ficheros","text":""},{"location":"languages/python/#leer-todo-el-contenido-del-fichero-como-una-cadena-de-texto","title":"Leer todo el contenido del fichero como una cadena de texto","text":"<pre><code>with open(\"archivo.txt\", \"r\") as archivo:\n    contenido = archivo.read()\n    print(contenido)\n</code></pre>"},{"location":"languages/python/#leer-un-archivo-linea-a-linea","title":"Leer un archivo linea a linea","text":"<pre><code>with open(\"archivo.txt\", \"r\") as archivo:\n    linea = archivo.readline()\n    while linea:\n        print(linea, end=\"\")\n        linea = archivo.readline()\n</code></pre>"},{"location":"languages/python/#obtener-una-lista-con-las-lineas-del-archivo","title":"Obtener una lista con las lineas del archivo","text":"<pre><code>with open(\"archivo.txt\", \"r\") as archivo:\n    lineas = archivo.readlines()\n    for linea in lineas:\n        print(linea, end=\"\")\n</code></pre> <pre><code>with open(\"archivo.txt\", \"r\") as archivo:\n    for linea in archivo:\n        print(linea, end=\"\")\n</code></pre>"},{"location":"languages/python/#lectura-de-archivos-binarios","title":"Lectura de archivos binarios","text":"<pre><code>with open(\"archivo.bin\", \"rb\") as archivo_binario:\n    datos = archivo_binario.read()\n</code></pre>"},{"location":"languages/python/#lectura-de-ficheros-csv","title":"Lectura de ficheros CSV","text":""},{"location":"languages/python/#leer-el-archivo-csv-linea-a-linea","title":"Leer el archivo CSV linea a linea","text":"<pre><code>import csv\n\nwith open(\"datos.csv\", newline=\"\") as archivo_csv:\n    lector_csv = csv.reader(archivo_csv)\n\n    for fila in lector_csv:\n        print(fila)\n</code></pre>"},{"location":"languages/python/#almacenarlo-en-un-diccionario","title":"Almacenarlo en un diccionario","text":"<pre><code>import csv\n\ndatos_diccionario = []\n\nwith open(\"datos.csv\", newline=\"\") as archivo_csv:\n    lector_csv = csv.DictReader(archivo_csv)\n\n    for fila in lector_csv:\n        datos_diccionario.append(fila)\n</code></pre>"},{"location":"languages/python/#almacenarlo-en-una-coleccion-de-objetos","title":"Almacenarlo en una coleccion de objetos","text":"<pre><code>import csv\n\npersonas = []\n\nwith open(\"datos.csv\", newline=\"\") as archivo_csv:\n    lector_csv = csv.reader(archivo_csv)\n\n    for fila in lector_csv:\n        nombre, edad, ciudad = fila\n        persona = Persona(nombre, edad, ciudad)\n        personas.append(persona)\n</code></pre>"},{"location":"languages/python/#escritura-de-ficheros","title":"Escritura de ficheros","text":""},{"location":"languages/python/#escribir-en-un-archivo-de-texto","title":"Escribir en un archivo de texto","text":"<pre><code>with open(\"archivo.txt\", \"w\") as archivo:\n    archivo.write(\"Hola, mundo!\\n\")\n    archivo.write(\"Este es un archivo de texto generado por python.\\n\")\n    archivo.write(\"Adi\u00f3s, mundo!\")\n</code></pre>"},{"location":"languages/python/#agregar-contenido-a-un-archivo-existente","title":"Agregar contenido a un archivo existente","text":"<pre><code>with open(\"archivo.txt\", \"a\") as archivo:\n    archivo.write(\"\\n\u00a1Esto se a\u00f1ade al final del archivo!\")\n</code></pre>"},{"location":"languages/python/#escribir-en-un-archivo-csv","title":"Escribir en un archivo CSV","text":"<pre><code>import csv\n\ndatos = [\n    [\"Nombre\", \"Edad\", \"Ciudad\"],\n    [\"Juan\", 30, \"Ciudad de M\u00e9xico\"],\n    [\"Mar\u00eda\", 25, \"Guadalajara\"],\n    [\"Pedro\", 40, \"Monterrey\"]\n]\n\nwith open(\"datos.csv\", \"w\", newline=\"\") as archivo_csv:\n    escritor_csv = csv.writer(archivo_csv)\n\n    for fila in datos:\n        escritor_csv.writerow(fila)\n</code></pre>"},{"location":"languages/python/#lectura-y-escritura-de-objetos-usando-pickle","title":"Lectura y escritura de objetos usando pickle","text":""},{"location":"languages/python/#lectura","title":"Lectura","text":"<pre><code>import pickle\n\nwith open(\"objetos.pkl\", \"rb\") as archivo:\n    personas_recuperadas = pickle.load(archivo)\n\nfor persona in personas_recuperadas:\n    print(persona.nombre, persona.edad)\n</code></pre>"},{"location":"languages/python/#escritura","title":"Escritura","text":"<pre><code>import pickle\n\npersonas = [juan, maria, pedro]\n\nwith open(\"objetos.pkl\", \"wb\") as archivo:\n    pickle.dump(personas, archivo)\n</code></pre>"},{"location":"languages/python/#bases-de-datos","title":"Bases de datos","text":""},{"location":"languages/python/#sqlite","title":"SQLite","text":"<pre><code>import sqlite3\n</code></pre>"},{"location":"languages/python/#conectar-a-una-base-de-datos","title":"Conectar a una base de datos","text":"<pre><code>conexion = sqlite3.connect('ejemplo.db')\n</code></pre>"},{"location":"languages/python/#crear-un-cursor","title":"Crear un cursor","text":"<pre><code>cursor = conexion.cursor()\n</code></pre>"},{"location":"languages/python/#crear-una-tabla","title":"Crear una tabla","text":"<pre><code>cursor.execute('''CREATE TABLE IF NOT EXISTS usuarios (\n                    id INTEGER PRIMARY KEY,\n                    nombre TEXT,\n                    edad INTEGER\n                )''')\n</code></pre>"},{"location":"languages/python/#insertar-datos","title":"Insertar datos","text":"<pre><code>cursor.execute(\"INSERT INTO usuarios (nombre, edad) VALUES (?, ?)\", ('Juan', 30))\n</code></pre>"},{"location":"languages/python/#guardar-los-cambios","title":"Guardar los cambios","text":"<pre><code>conexion.commit()\n</code></pre>"},{"location":"languages/python/#obtener-datos","title":"Obtener datos","text":"<pre><code>cursor.execute(\"SELECT * FROM usuarios\")\n\nfilas = cursor.fetchall()\n</code></pre>"},{"location":"languages/python/#3-cerrar-la-conexion","title":"3 Cerrar la conexi\u00f3n","text":"<pre><code>conexion.close()\n</code></pre>"},{"location":"languages/python/#postgresql","title":"PostgreSQL","text":"<p>Note</p> <p>Hay que instalar previamente psycopg2</p> <pre><code>pip install psycopg2\n</code></pre> <pre><code>import psycopg2\n</code></pre>"},{"location":"languages/python/#conectar-a-una-base-de-datos_1","title":"Conectar a una base de datos","text":"<pre><code>conexion = psycopg2.connect(\n    host=\"localhost\",\n    database=\"nombre_de_la_base_de_datos\",\n    user=\"nombre_de_usuario\",\n    password=\"contrase\u00f1a\"\n)\n</code></pre>"},{"location":"languages/python/#crear-un-cursor_1","title":"Crear un cursor","text":"<pre><code>cursor = conexion.cursor()\n</code></pre>"},{"location":"languages/python/#crear-una-tabla_1","title":"Crear una tabla","text":"<pre><code>cursor.execute(\"\"\"\n        CREATE TABLE IF NOT EXISTS usuarios (\n            id SERIAL PRIMARY KEY,\n            nombre TEXT,\n            edad INTEGER\n        )\n    \"\"\")\n</code></pre>"},{"location":"languages/python/#insertar-datos_1","title":"Insertar datos","text":"<pre><code>cursor.execute(\"INSERT INTO usuarios (nombre, edad) VALUES (%s, %s)\", (\"Juan\", 30))\n</code></pre>"},{"location":"languages/python/#guardar-los-cambios_1","title":"Guardar los cambios","text":"<pre><code>conexion.commit()\n</code></pre>"},{"location":"languages/python/#obtener-datos_1","title":"Obtener datos","text":"<pre><code>cursor.execute(\"SELECT * FROM usuarios\")\n\nfilas = cursor.fetchall()\n</code></pre>"},{"location":"languages/python/#cerrar-la-conexion","title":"Cerrar la conexi\u00f3n","text":"<pre><code>conexion.close()\n</code></pre>"},{"location":"languages/python/#excepciones","title":"Excepciones","text":"<pre><code>Exception, psycopg2.Error\n</code></pre>"},{"location":"languages/python/#mysql","title":"MySQL","text":"<p>Note</p> <p>Hay que instalar previamente mysql-connector-python</p> <pre><code>pip install mysql-connector-python\n</code></pre> <pre><code>import mysql.connector\n</code></pre>"},{"location":"languages/python/#conectar-a-una-base-de-datos_2","title":"Conectar a una base de datos","text":"<pre><code>conexion = mysql.connector.connect(\n    host=\"localhost\",\n    database=\"nombre_de_la_base_de_datos\",\n    user=\"nombre_de_usuario\",\n    password=\"contrase\u00f1a\"\n)\n</code></pre>"},{"location":"languages/python/#crear-un-cursor_2","title":"Crear un cursor","text":"<pre><code>cursor = conexion.cursor()\n</code></pre>"},{"location":"languages/python/#crear-una-tabla_2","title":"Crear una tabla","text":"<pre><code>cursor.execute(\"\"\"\n        CREATE TABLE IF NOT EXISTS usuarios (\n            id SERIAL PRIMARY KEY,\n            nombre TEXT,\n            edad INTEGER\n        )\n    \"\"\")\n</code></pre>"},{"location":"languages/python/#insertar-datos_2","title":"Insertar datos","text":"<pre><code>cursor.execute(\"INSERT INTO usuarios (nombre, edad) VALUES (%s, %s)\", (\"Juan\", 30))\n</code></pre>"},{"location":"languages/python/#guardar-los-cambios_2","title":"Guardar los cambios","text":"<pre><code>conexion.commit()\n</code></pre>"},{"location":"languages/python/#obtener-datos_2","title":"Obtener datos","text":"<pre><code>cursor.execute(\"SELECT * FROM usuarios\")\n\nfilas = cursor.fetchall()\n</code></pre>"},{"location":"languages/python/#cerrar-la-conexion_1","title":"Cerrar la conexi\u00f3n","text":"<pre><code>conexion.close()\n</code></pre>"},{"location":"languages/python/#excepciones_1","title":"Excepciones","text":"<pre><code>mysql.connector.Error\n</code></pre>"},{"location":"languages/python/#mongodb","title":"MongoDB","text":"<p>Note</p> <p>Hay que instalar previamente pymongo</p> <pre><code>pip install pymongo\n</code></pre> <pre><code>from pymongo import MongoClient\n</code></pre>"},{"location":"languages/python/#conectarse-a-un-servidor-de-mongodb","title":"Conectarse a un servidor de MongoDB","text":"<pre><code>cliente = MongoClient('mongodb://localhost:27017/')\n</code></pre>"},{"location":"languages/python/#conectarse-a-una-base-de-datos-en-mongodb","title":"Conectarse a una base de datos en MongoDB","text":"<p>db = cliente['nombre_de_la_base_de_datos']</p>"},{"location":"languages/python/#insertar-datos_3","title":"Insertar datos","text":"<pre><code>datos = [\n    {\"nombre\": \"Juan\", \"edad\": 30},\n    {\"nombre\": \"Mar\u00eda\", \"edad\": 25},\n    {\"nombre\": \"Pedro\", \"edad\": 40}\n]\n\ncoleccion.insert_many(datos)\n</code></pre>"},{"location":"languages/python/#leer-datos","title":"Leer datos","text":"<pre><code>coleccion = db['nombre_de_la_coleccion']\n\ndocumentos = coleccion.find()\n</code></pre>"},{"location":"others/json/","title":"JSON (JavaScript Object Notation)","text":"<p>JSON es un formato de texto ligero para el intercambio de datos. Es f\u00e1cil de leer y escribir para los seres humanos y f\u00e1cil de analizar y generar para las m\u00e1quinas. JSON se utiliza com\u00fanmente para transmitir datos en aplicaciones web (por ejemplo, entre un servidor y un cliente).</p>"},{"location":"others/json/#estructura-basica-de-json","title":"Estructura B\u00e1sica de JSON","text":"<p>JSON se compone de dos estructuras principales:</p> <p>Objetos: Una colecci\u00f3n desordenada de pares clave/valor. Las claves son cadenas (strings) y los valores pueden ser de    varios tipos (n\u00famero, cadena, objeto, array, booleano o null).</p> <pre><code>{\n  \"nombre\": \"Juan\",\n  \"edad\": 30,\n  \"casado\": true,\n  \"hijos\": [\"Ana\", \"Pablo\"],\n  \"direccion\": {\n    \"calle\": \"Calle Falsa 123\",\n    \"ciudad\": \"Madrid\"\n  }\n}\n</code></pre> <p>Arrays: Una lista ordenada de valores, que pueden ser de cualquier tipo (n\u00famero, cadena, objeto, array, booleano o    null).</p> <pre><code>[\n  \"manzana\",\n  \"pl\u00e1tano\",\n  \"naranja\"\n]\n</code></pre>"},{"location":"others/json/#tipos-de-datos-en-json","title":"Tipos de Datos en JSON","text":"<p>JSON admite los siguientes tipos de datos:</p> <ul> <li>N\u00famero: Puede ser un n\u00famero entero o decimal (de punto flotante).</li> <li>Cadena (String): Se escribe entre comillas dobles.</li> <li>Booleano: Puede ser true o false.</li> <li>Nulo: Representado por null.</li> <li>Objeto: Una colecci\u00f3n de pares clave/valor, delimitada por llaves {}.</li> <li>Array: Una lista ordenada de valores, delimitada por corchetes [].</li> </ul>"},{"location":"others/json/#reglas-sintacticas-de-json","title":"Reglas Sint\u00e1cticas de JSON","text":"<ol> <li>Las claves de los objetos deben ser cadenas: Deben estar entre comillas dobles.</li> <li>Los valores pueden ser de varios tipos: Como n\u00fameros, cadenas, objetos, arrays, booleanos o null.</li> <li>Las comas separan los pares clave/valor en un objeto y los elementos en un array.</li> <li>Los objetos y arrays pueden anidarse: Esto significa que un valor en un objeto puede ser otro objeto o un array, y viceversa.</li> </ol>"},{"location":"others/json/#ejemplo-de-json","title":"Ejemplo de JSON","text":"<pre><code>{\n  \"nombre\": \"Mar\u00eda\",\n  \"edad\": 25,\n  \"esEstudiante\": false,\n  \"cursos\": [\"Matem\u00e1ticas\", \"F\u00edsica\", \"Qu\u00edmica\"],\n  \"direccion\": {\n    \"calle\": \"Avenida Siempreviva\",\n    \"numero\": 742,\n    \"ciudad\": \"Springfield\"\n  },\n  \"amigos\": [\n    {\n      \"nombre\": \"Luisa\",\n      \"edad\": 24\n    },\n    {\n      \"nombre\": \"Pedro\",\n      \"edad\": 27\n    }\n  ]\n}\n</code></pre>"},{"location":"others/json/#ventajas-de-json","title":"Ventajas de JSON","text":"<ul> <li>Ligero: JSON es menos pesado en comparaci\u00f3n con otros formatos de intercambio de datos como XML.</li> <li>F\u00e1cil de leer y escribir: Tanto para humanos como para m\u00e1quinas.</li> <li>Compatibilidad: Es compatible con muchos lenguajes de programaci\u00f3n y se utiliza ampliamente en APIs web.</li> </ul>"},{"location":"others/json/#recursos-adicionales","title":"Recursos adicionales","text":"<ul> <li>JSON.org: Sitio web oficial con una explicaci\u00f3n detallada de JSON, sus especificaciones y ejemplos.</li> <li>JSONLint: Una herramienta en l\u00ednea para validar y formatear JSON.</li> </ul>"},{"location":"others/markdown/","title":"Markdown","text":"<p>Markdown es un lenguaje de marcado ligero que se utiliza para formatear texto. Es f\u00e1cil de leer y escribir, y se convierte en HTML de manera sencilla.</p>"},{"location":"others/markdown/#encabezados","title":"Encabezados","text":"<p>Puedes crear encabezados utilizando el s\u00edmbolo <code>#</code>. El n\u00famero de <code>#</code> indica el nivel del encabezado.</p> <pre><code># Encabezado 1\n\n## Encabezado 2\n\n### Encabezado 3\n\n#### Encabezado 4\n\n##### Encabezado 5\n\n###### Encabezado 6\n</code></pre>"},{"location":"others/markdown/#enfasis","title":"\u00c9nfasis","text":"<p>Puedes agregar \u00e9nfasis al texto utilizando asteriscos * o guiones bajos _.</p> <ul> <li>Negrita: Envuelve el texto con 2 asteriscos o 2 guiones bajos. <code>**negrita**</code></li> <li>Cursiva: Envuelve el texto con 1 asterisco o un 1 gui\u00f3n bajo. <code>*cursiva*</code></li> <li>Negrita y Cursiva: Usa 3 asteriscos o 3 guiones bajos. <code>***negrita y cursiva***</code></li> </ul>"},{"location":"others/markdown/#listas","title":"Listas","text":"<p>Puedes anidar listas utilizando espacios o tabulaciones antes del marcador de la lista.</p>"},{"location":"others/markdown/#listas-ordenadas","title":"Listas ordenadas","text":"<p>Utiliza n\u00fameros seguidos de un punto para crear listas ordenadas.</p> <pre><code>1. Primer \u00edtem\n2. Segundo \u00edtem\n3. Tercer \u00edtem\n</code></pre>"},{"location":"others/markdown/#listas-desordenadas","title":"Listas desordenadas","text":"<p>Utiliza asteriscos *, signos m\u00e1s + o guiones - para listas desordenadas.</p> <pre><code>- Primer \u00edtem\n- Segundo \u00edtem\n- Tercer \u00edtem\n</code></pre>"},{"location":"others/markdown/#enlaces","title":"Enlaces","text":"<p>Puedes crear enlaces utilizando corchetes [] para el texto del enlace y par\u00e9ntesis () para la URL.</p> <pre><code>[Texto del enlace](https://www.ejemplo.com)\n</code></pre> <p>Tambien se pueden crear atajos a los enlaces:</p> <pre><code>[Nombre del enlace][Referencia al enlace]\n\n[Referencia al enlace]: https://www.ejemplo.com\n</code></pre>"},{"location":"others/markdown/#citas","title":"Citas","text":"<p>Para crear citas, utiliza el s\u00edmbolo &gt;.</p> <pre><code>&gt; Esta es una cita.\n</code></pre> <p>Tambi\u00e9n existen citas especiales que se embellecen en github</p> <pre><code>&gt; [!NOTE]\n&gt; Esta es una cita.\n</code></pre>"},{"location":"others/markdown/#tablas","title":"Tablas","text":"<p>Puedes crear tablas utilizando guiones - para la l\u00ednea de encabezado y barras verticales | para separar columnas.</p> <pre><code>| Encabezado 1  | Encabezado 2  |\n| ------------- | ------------- |\n| Fila 1, Col 1 | Fila 1, Col 2 |\n| Fila 2, Col 1 | Fila 2, Col 2 |\n</code></pre>"},{"location":"others/markdown/#codigo","title":"C\u00f3digo","text":""},{"location":"others/markdown/#codigo-en-linea","title":"C\u00f3digo en L\u00ednea","text":"<p>Para c\u00f3digo en l\u00ednea, usa comillas simples invertidas `.</p> <pre><code>Este es un ejemplo de `c\u00f3digo en l\u00ednea`.\n</code></pre>"},{"location":"others/markdown/#bloques-de-codigo","title":"Bloques de C\u00f3digo","text":"<p>Para bloques de c\u00f3digo, utiliza tres comillas simples invertidas ``` antes y despu\u00e9s del c\u00f3digo. Puedes especificar el lenguaje de programaci\u00f3n para resaltado de sintaxis.</p> <pre><code>```java\nSystem.out.println(\"Hola mund0\");\n```\n</code></pre> <p>Para mostrar un bloque de c\u00f3digo de markdown dentro de un bloque de c\u00f3digo simplemnete se usan mas comillas simples invertidas en el bloque de c\u00f3digo externo.</p>"},{"location":"others/markdown/#lenguajes","title":"Lenguajes","text":"<p>En la siguiente tabla se muestra una lista de lenguajes de prograci\u00f3n admitidos por Linguistic, el sistema de resaltado de c\u00f3digo de GitHub:</p> Lenguaje Alias Lenguaje Alias Lenguaje Alias Bash / Shell <code>bash</code>, <code>sh</code>, <code>shell</code> Java <code>java</code> Python <code>python</code>, <code>py</code> C <code>c</code> JavaScript <code>javascript</code>, <code>js</code> Ruby <code>ruby</code>, <code>rb</code> C++ <code>cpp</code>, <code>c++</code> JSON <code>json</code> Rust <code>rust</code> C# <code>csharp</code>, <code>cs</code> Kotlin <code>kotlin</code> SQL <code>sql</code> CSS <code>css</code> Markdown <code>markdown</code>, <code>md</code> Swift <code>swift</code> Diff <code>diff</code> Objective-C <code>objective-c</code>, <code>objc</code> TypeScript <code>typescript</code>, <code>ts</code> Go <code>go</code> Perl <code>perl</code>, <code>pl</code> XML <code>xml</code> HTML <code>html</code> PHP <code>php</code> YAML <code>yaml</code>, <code>yml</code>"},{"location":"others/markdown/#lineas-horizontales","title":"L\u00edneas horizontales","text":"<p>Para agregar una l\u00ednea horizontal, utiliza tres o m\u00e1s guiones, asteriscos, o guiones bajos.</p> <pre><code>---\n</code></pre>"},{"location":"others/markdown/#escapando-caracteres","title":"Escapando caracteres","text":"<p>Si necesitas usar un car\u00e1cter especial literalmente, esc\u00e1palo con una barra invertida .</p> <pre><code>\\*Este texto no estar\u00e1 en cursiva\\*\n</code></pre>"},{"location":"others/node/","title":"Node.js","text":""},{"location":"others/node/#que-es-nodejs","title":"\u00bfQu\u00e9 es Node.js?","text":"<p>Node.js es un entorno de ejecuci\u00f3n para JavaScript que se construy\u00f3 sobre el motor JavaScript V8 de Chrome. Permite a los desarrolladores ejecutar c\u00f3digo JavaScript en el servidor, fuera del navegador, para construir aplicaciones backend escalables.</p>"},{"location":"others/node/#caracteristicas-principales-de-nodejs","title":"Caracter\u00edsticas principales de Node.js:","text":"<ul> <li>As\u00edncrono y orientado a eventos: Node.js utiliza un modelo de entrada/salida no bloqueante, lo que lo hace eficiente y   adecuado para aplicaciones en tiempo real.</li> <li>Motor V8: Utiliza el motor V8 de Google Chrome para ejecutar c\u00f3digo JavaScript r\u00e1pidamente.</li> <li>Ecosistema de npm: Node.js viene con npm, un gestor de paquetes que ofrece una gran cantidad de m\u00f3dulos para agilizar   el desarrollo.</li> </ul>"},{"location":"others/node/#instalacion-de-nodejs","title":"Instalaci\u00f3n de node.js","text":"<p>Es recomendable el uso de nvm para el control de versiones, por lo que lo instalaremos en lugar del node.js. Si tenemos node.js instalado, lo mejor es desinstalarlo.</p> <p>Verifica la instalaci\u00f3n de nvm con el comando:</p> <pre><code>nvm version\n</code></pre> <p>Una vez instalado nvm instalamos la \u00faltima versi\u00f3n o la que necesitemos para el proyecto en el que vamos a trabajar.</p> <p>Podemos obtener una lista de las versiones disponibles usando el comando:</p> <pre><code>nvm ls available\n</code></pre> <p>Para instalar la versi\u00f3n de node utilizaremos el siguiente comando sustituyendo el n\u00famero por la versi\u00f3n que nosotros deseemos:</p> <pre><code>nvm install 20.0.0\n</code></pre> <p>Para obtener una lista de las versiones disponibles instaladas previamente podemos utilizar el comando:</p> <pre><code>nvm ls\n</code></pre> <p>Para indicar que versi\u00f3n queremos utilizar usaremos el siguiente comando sustituyendo el n\u00famero por la versi\u00f3n que nosotros deseemos usar de la lista de versiones disponibles ya instaladas previamente:</p> <pre><code>nvm use 20.0.0\n</code></pre> <p>Verifica que funciona con el comando:</p> <pre><code>npm -v\n</code></pre>"},{"location":"others/node/#ejecutar-un-script","title":"Ejecutar un script","text":"<pre><code>node app.js\n</code></pre>"},{"location":"others/node/#inicializar-un-proyecto","title":"Inicializar un proyecto","text":"<pre><code>npm init\n</code></pre>"},{"location":"others/node/#instalar-un-paquete","title":"Instalar un paquete","text":"<pre><code>npm install &lt;nombre_paquete&gt;\n</code></pre>"},{"location":"others/node/#instalar-un-paquete-de-manera-global","title":"Instalar un paquete de manera global","text":"<pre><code>npm install -g &lt;nombre_paquete&gt;\n</code></pre>"},{"location":"others/node/#desinstalar-un-paquete","title":"Desinstalar un paquete","text":"<pre><code>npm uninstall &lt;nombre_paquete&gt;\n</code></pre>"},{"location":"others/node/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n de npm</li> <li>Documentaci\u00f3n Oficial de Node.js</li> </ul>"},{"location":"others/xml/","title":"XML(Extensive Markup Language)","text":"<p>XML (Extensible Markup Language) es un lenguaje de marcado dise\u00f1ado para almacenar y transportar datos. A diferencia de HTML, que tiene un conjunto fijo de etiquetas, XML permite a los desarrolladores definir sus propias etiquetas y estructuras de datos.</p>"},{"location":"others/xml/#estructura","title":"Estructura","text":"<p>Un documento XML tiene una estructura jer\u00e1rquica basada en etiquetas. Cada etiqueta tiene un nombre y puede contener texto, otros elementos, o atributos.</p> <ul> <li>Declaraci\u00f3n XML: La primera l\u00ednea es la declaraci\u00f3n XML que define la versi\u00f3n de XML y la codificaci\u00f3n de caracteres   del documento.</li> <li>Elementos o Etiquetas: Un elemento puede contener otros elementos (hijos) o texto.</li> <li>Atributos: Los atributos proporcionan informaci\u00f3n adicional sobre los elementos y est\u00e1n definidos dentro de la   etiqueta de apertura.</li> </ul>"},{"location":"others/xml/#notas-importantes-sobre-xml","title":"Notas Importantes sobre XML","text":"<ul> <li>Bien Formado vs. V\u00e1lido: Un documento XML bien formado sigue las reglas sint\u00e1cticas de XML (por ejemplo, todas las etiquetas de apertura deben tener una etiqueta de cierre). Un documento XML v\u00e1lido es un documento bien formado que tambi\u00e9n cumple con las reglas definidas por un DTD (Document Type Definition) o un esquema XML.</li> <li>Sensibilidad a May\u00fasculas: XML es sensible a may\u00fasculas y min\u00fasculas, por lo que  y  se consideran elementos diferentes. <li>Uso de Espacios en Blanco: XML preserva los espacios en blanco, lo cual es \u00fatil cuando se desea mantener el formato del texto.</li> <li>Escapado de Caracteres Especiales: Algunos caracteres como &lt;, &gt;, y &amp; tienen que ser escapados usando &lt;, &gt;, y &amp; respectivamente para evitar conflictos con la sintaxis de XML.</li>"},{"location":"others/xml/#ejemplo-de-xml","title":"Ejemplo de XML","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;biblioteca&gt;\n  &lt;libro genero=\"tecnolog\u00eda\"&gt;\n    &lt;titulo&gt;Introducci\u00f3n a XML&lt;/titulo&gt;\n    &lt;autor&gt;Juan P\u00e9rez&lt;/autor&gt;\n    &lt;detalles&gt;\n      &lt;editorial&gt;Editorial ABC&lt;/editorial&gt;\n      &lt;publicado&gt;2024&lt;/publicado&gt;\n    &lt;/detalles&gt;\n  &lt;/libro&gt;\n  &lt;libro genero=\"ciencia\"&gt;\n    &lt;titulo&gt;El Universo&lt;/titulo&gt;\n    &lt;autor&gt;Mar\u00eda L\u00f3pez&lt;/autor&gt;\n    &lt;detalles&gt;\n      &lt;editorial&gt;Editorial XYZ&lt;/editorial&gt;\n      &lt;publicado&gt;2022&lt;/publicado&gt;\n    &lt;/detalles&gt;\n  &lt;/libro&gt;\n&lt;/biblioteca&gt;\n</code></pre>"},{"location":"others/yaml/","title":"YAML (YAML Ain't Markup Language)","text":"<p>YAML es un formato de serializaci\u00f3n de datos muy legible y f\u00e1cil de escribir, especialmente \u00fatil para archivos de configuraci\u00f3n. La indentaci\u00f3n es crucial en YAML, ya que define la estructura jer\u00e1rquica de los datos. Aseg\u00farate de usar siempre espacios y no tabulaciones para evitar errores de sintaxis.</p>"},{"location":"others/yaml/#estructura","title":"Estructura","text":"<ul> <li>Comentarios: comienzan con <code>#</code></li> <li>Objetos (mapas): utilizan el formato <code>clave: valor</code></li> <li>Anidaci\u00f3n: a indentaci\u00f3n (espacios) define la jerarqu\u00eda y la anidaci\u00f3n de los datos.</li> <li>Listas (Arrays): Se indican con guiones (-) y se pueden anidar dentro de otros objetos.</li> <li>Valores en lista sin clave-valor: Las listas tambi\u00e9n pueden contener valores simples sin formato de clave-valor.</li> </ul>"},{"location":"others/yaml/#ejemplo-de-yaml","title":"Ejemplo de YAML","text":"<pre><code># Informaci\u00f3n b\u00e1sica de una persona\npersona:\n  nombre: Juan P\u00e9rez\n  edad: 30\n  direccion:\n    calle: \"123 Calle Principal\"\n    ciudad: \"Ciudad Ejemplo\"\n    pais: \"Pa\u00eds de Ejemplo\"\n  telefonos:\n    - tipo: \"casa\"\n      numero: \"123-456-7890\"\n    - tipo: \"trabajo\"\n      numero: \"098-765-4321\"\n  habilidades:\n    - programaci\u00f3n\n    - escritura\n    - cocina\n</code></pre>"}]}