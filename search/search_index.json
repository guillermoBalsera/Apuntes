{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido a GuimoNotion","text":""},{"location":"#contenido-del-sitio","title":"Contenido del Sitio","text":""},{"location":"#lenguajes-de-programacion","title":"Lenguajes de programaci\u00f3n","text":"Lenguaje Interpretado Usos m\u00e1s comunes Implementado Python S\u00ed Ciencia de datos, desarrollo web, automatizaci\u00f3n de scripts X Java No Aplicaciones empresariales, desarrollo de Android, sistemas distribuidos PHP S\u00ed Desarrollo web, gesti\u00f3n de contenido (CMS), scripts del lado del servidor"},{"location":"#frameworks","title":"Frameworks","text":""},{"location":"#frontend","title":"FrontEnd","text":"Framework/Plataforma Lenguaje Base Usos m\u00e1s comunes Implementado MkDocs Python Generaci\u00f3n de sitios web de documentaci\u00f3n est\u00e1tica a partir de Markdown X Angular JavaScript/TypeScript Desarrollo de aplicaciones web din\u00e1micas y complejas X Ionic JavaScript/TypeScript Desarrollo de aplicaciones m\u00f3viles h\u00edbridas utilizando tecnolog\u00edas web Electron JavaScript/TypeScript Desarrollo de aplicaciones de escritorio multiplataforma utilizando tecnolog\u00edas web React JavaScript/TypeScript Desarrollo de interfaces de usuario para aplicaciones web de una sola p\u00e1gina (SPA) Android con Kotlin Kotlin Desarrollo de aplicaciones m\u00f3viles nativas para Android WPF (Windows Presentation Foundation) C# Desarrollo de aplicaciones de escritorio para Windows con interfaces ricas WPF (Windows Presentation Foundation) C# Desarrollo de aplicaciones de escritorio para Windows con interfaces ricas"},{"location":"#backend","title":"BackEnd","text":"Framework Lenguaje Base Usos m\u00e1s comunes Implementado PHP Laravel PHP Desarrollo web de back-end, aplicaciones CRUD, API REST X Spring Boot Java Desarrollo de aplicaciones empresariales, microservicios Express.js JavaScript Desarrollo del lado del servidor, API REST, aplicaciones de back-end ligeras ASP.NET Core C# Desarrollo de aplicaciones web y servicios API, aplicaciones empresariales FastAPI Python Desarrollo de API REST, aplicaciones de back-end de alto rendimiento"},{"location":"#otros","title":"Otros","text":"Nombre Usos m\u00e1s comunes Caracter\u00edsticas clave Implementado Markdown Documentaci\u00f3n, blogs, README files Sintaxis ligera para formatear texto plano, conversi\u00f3n a HTML X HTML Estructuraci\u00f3n y presentaci\u00f3n de contenido en la web Etiquetas para definir elementos como encabezados, p\u00e1rrafos, enlaces, etc. CSS Dise\u00f1o y presentaci\u00f3n de documentos web Controla el estilo visual de elementos HTML, incluye propiedades para colores, fuentes, m\u00e1rgenes, etc. XML Intercambio de datos entre aplicaciones, configuraci\u00f3n Estructura jer\u00e1rquica con etiquetas personalizables, extensibilidad JSON Intercambio de datos entre aplicaciones, configuraci\u00f3n, almacenamiento de datos Formato ligero y legible por humanos, basado en texto, usa una sintaxis de pares clave-valor YAML Configuraci\u00f3n de aplicaciones, intercambio de datos Formato legible por humanos, jerarqu\u00eda basada en indentaci\u00f3n"},{"location":"frameworks/BackEnd/PHP-Laravel/","title":"PHP-Laravel","text":""},{"location":"frameworks/BackEnd/PHP-Laravel/#instalacion-de-laravel-y-creacion-de-un-nuevo-proyecto","title":"Instalaci\u00f3n de Laravel y creaci\u00f3n de un nuevo proyecto","text":""},{"location":"frameworks/BackEnd/PHP-Laravel/#instalar-laravel","title":"Instalar Laravel","text":"<pre><code>composer global require laravel/installer\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#actualizar-laravel","title":"Actualizar Laravel","text":"<pre><code>composer global update laravel/installer\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#version-de-laravel","title":"Versi\u00f3n de Laravel","text":"<pre><code>laravel -v\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#intalar-breeze","title":"Intalar Breeze","text":"<pre><code>composer require laravel/breeze --dev\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#crear-el-proyecto","title":"Crear el proyecto","text":"<pre><code>composer create-project laravel/laravel APi_12\n</code></pre> <p>Elegir la opcion <code>0</code> o <code>blame</code></p> <pre><code>php artisan breeze:install\n</code></pre> <pre><code>php artisan migrate\n</code></pre> <pre><code>npm install\n</code></pre> <pre><code>npm run dev\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#migraciones","title":"Migraciones","text":""},{"location":"frameworks/BackEnd/PHP-Laravel/#crear-migracion","title":"Crear migraci\u00f3n","text":"<p>(Se deben crear en el orden en que se desea que se ejecuten)</p> <pre><code>php artisan:makemigration create_nombre_table\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#configurar-las-migraciones","title":"Configurar las migraciones","text":"<pre><code>Schema::create('users', function (Blueprint $table) {\n   $table-&gt;id();\n   $table-&gt;string('name');\n});\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#migrar","title":"Migrar","text":"<p>(Se migra por orden alfab\u00e9tico)</p> <pre><code>php artisan migrate\n</code></pre> <p>[!NOTE] Se migra por orden alfab\u00e9tico o por fecha de creaci\u00f3n si no se han modificado los nombres de los archivos.</p>"},{"location":"frameworks/BackEnd/PHP-Laravel/#deshacer-la-ultima-migracion","title":"Deshacer la \u00faltima migraci\u00f3n","text":"<pre><code>php artisan migrate:rollback\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#deshacer-todas-las-migraciones","title":"Deshacer todas las migraciones","text":"<pre><code>php artisan migrate:reset\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#deshacer-todas-las-migraciones-y-migrar-de-nuevo","title":"Deshacer todas las migraciones y migrar de nuevo","text":"<pre><code>php artisan migrate:fresh\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#estado-de-las-migraciones","title":"Estado de las migraciones","text":"<pre><code>php artisan migrate:status\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#configuracion","title":"Configuraci\u00f3n","text":"<p>Hay que modificar el archivo .env (Se encuentra en el directorio raiz):</p> <pre><code>DB_CONNECTION=mysql\nDB_HOST=localhost\nDB_PORT=3306\nDB_DATABASE=nombreBD*\nDB_USERNAME=*\nDB_PASSWORD=*\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#modelo","title":"Modelo","text":""},{"location":"frameworks/BackEnd/PHP-Laravel/#crear-nuevo-modelo","title":"Crear nuevo modelo","text":"<pre><code>php artisan make:model Nombre\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#especificar-el-nombre-de-la-tabla-en-la-base-de-datos","title":"Especificar el nombre de la tabla en la base de datos","text":"<p>La tabla es el plural del nombre del modelo creado, pero a veces no lo detecta bien asi que le cambiamos manualmente el nombre para que pueda encontrar la tabla.</p> <pre><code>protected $table = 'tasks_lists';\n</code></pre> <p>Con la primary key pasa algo parecido. Laravel asume que cada tabla tiene declarado un campo llamado <code>id</code>, pero en caso de que no sea as\u00ed debemos sobreescribirlo.</p> <pre><code>protected $primaryKey = 'id';\n</code></pre> <p>La propiedad <code>timestamps</code> nos permite crear los campos <code>updated_at</code> y <code>created_at</code> en la base de datos de forma autom\u00e1tica en la base de datos. Estos campos se actualizan automaticamente al ejercer acciones de actualizado o creaci\u00f3n de la fila.</p> <pre><code>public $timestamps = false;\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#atributos","title":"Atributos","text":"<pre><code>protected $fileable = [\n   'id',\n   'name'\n];\n</code></pre> <p>[!NOTE] Se deben especificar tambi\u00e9n las foreign keys</p>"},{"location":"frameworks/BackEnd/PHP-Laravel/#relaciones","title":"Relaciones","text":""},{"location":"frameworks/BackEnd/PHP-Laravel/#one-to-one","title":"One to One","text":"<p>Se debe crear una funcion <code>hasOne()</code> en uno de los modelos.</p> <pre><code>class Libro extends Model {\n  public function portada() {\n    return $this-&gt;hasOne(Portada::class);\n  }\n}\n</code></pre> <p>Si se desea hacer la relaci\u00f3n bidireccional debe agregarse al otro modelo el metodo <code>belongsTo()</code></p> <pre><code>class Libro extends Model {\n  public function portada() {\n    return $this-&gt;hasOne(Portada::class);\n  }\n}\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#one-to-many","title":"One to Many","text":"<p>Se debe crear la funci\u00f3n <code>hasMany()</code> en el modelo que posee varios objetos.</p> <pre><code>class Autor extends Model\n{\n  public function libros(){\n    return $this-&gt;hasMany(Libro::class);\n  }\n}\n</code></pre> <p>La relaci\u00f3n inversa se establece creando la funci\u00f3n <code>belongsTo()</code> en el otro modelo.</p> <pre><code>class Libro extends Model {\n  public function autor() {\n    return $this-&gt;belongsTo(Autor::class);\n  }\n}\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#many-to-many","title":"Many to Many","text":"<p>En los dos modelos debe definirse el metodo <code>belongToMany()</code></p> <pre><code>class Libro extends Model {\n  public function bibliotecas() {\n    return $this-&gt;belongsToMany(Biblioteca::class);\n  }\n}\n</code></pre> <pre><code>class Biblioteca extends Model {\n  public function libros() {\n    return $this-&gt;belongsToMany(Libro::class);\n  }\n}\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#seeders","title":"Seeders","text":"<p>Los seeders sirven para rellenar la base de datos con informaci\u00f3n inicial.</p> <p>Para crear un seeder usaremos el comando:</p> <pre><code>php artisan make:seeder NombreSeeder\n</code></pre> <p>Se recomienda crear un seeder para cada tabla. En este seeder se crear\u00e1 un m\u00e9todo <code>run</code> donde escribiremos los datos que queremos introducir en la base de datos.</p> <p>Desde la funci\u00f3n <code>run</code> de la clase <code>DatabaseSeeder</code> llamaremos a los distintos seeders</p> <pre><code>$this-&gt;call(NombreSeeder::class);\n</code></pre> <p>Para ejecutar la clase <code>DatabaseSeeder</code> usaremos el comando:</p> <pre><code>php artisan db:seed\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#factories","title":"Factories","text":"<p>Los factories son clases que crean por nosotros datos ficticios autom\u00e1ticamente.</p> <p>Para crear un factorie usaremos el comando:</p> <pre><code>php artisan make:factorie NombreFactorie\n</code></pre> <p>Se recomienda crear un factorie para cada clase.</p> <p>En este factorie debemos completar el atributo <code>model</code> y la funci\u00f3n <code>definition()</code>.</p> <pre><code>class NombreFactory extendes Factory {\n  protected $model = Nombre::class;\n\n  public function definition() {\n    return [\n      'atributo' =&gt; fake()-&gt;name(),\n      'atributo' =&gt; fake()-&gt;name(),\n      'foreign_key' =&gt; ModeloForeignKey::all()-&gt;random()-&gt;id,\n    ];\n  }\n}\n</code></pre> <p>Desde la funci\u00f3n <code>run</code> de la clase Seeder podemos llamar al factorie de la siguiente forma:</p> <pre><code>\\App\\Models\\Nombre::factory(n\u00famero)-&gt;create();\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#resources","title":"Resources","text":"<p>Los resources son herramientas para dar forma a las respuestas JSON de la API, de tal manera que nos permiten personalizar la presentaci\u00f3n de los datos.</p> <p>Para crear un resource usaremos el comando:</p> <pre><code>php artisan make:resource NombreResource\n</code></pre> <p>Puedes personalizar qu\u00e9 campos incluir, renombrarlos y agregar informaci\u00f3n adicional.</p> <pre><code>public function toArray($request)\n{\n    return [\n        'id' =&gt; $this-&gt;id,\n        'titulo' =&gt; $this-&gt;titulo,\n        'contenido' =&gt; $this-&gt;contenido,\n        'fecha' =&gt; $this-&gt;created_at-&gt;format('Y-m-d'),\n        'clave_foranea' =&gt; $this-&gt;nombre_tabla,\n        'clave_foranea' =&gt; $this-&gt;nombre_tabla-&gt;campo_tabla\n    ];\n}\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#collections","title":"Collections","text":"<p>Las collections nos permiten transformar colecciones en respuestas JSON estructuradas.</p> <p>Para crear una colection usaremos el comando:</p> <pre><code>php artisan make:resource ArticuloCollection\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#9-controladores","title":"9. Controladores","text":"<p>Para crear un controlador usaremos el comando:</p> <pre><code>php artisan make:controller NombreApiController --api\n</code></pre> <p>Nos crear\u00e1 los m\u00e9todos index, store, show, update y destroy vacios por defecto.</p>"},{"location":"frameworks/BackEnd/PHP-Laravel/#validacion-de-campos-con-request","title":"Validaci\u00f3n de campos con request","text":"<p>Para validar campos es recomendable el uso de request, que se trata de una clase donde establecemos una serie de reglas que deben cumplir los campos.</p> <p>Si deseamos crear un request utilizamos el siguiente comando:</p> <pre><code>php artisan make:request CreateNombreRequest\n</code></pre> <p>Y dentro de la funci\u00f3n <code>rules</code> personalizamos las reglas de validaci\u00f3n:</p> <pre><code>public function rules()\n    {\n        return [\n            'titulo' =&gt; 'required|string|max:255',\n            'contenido' =&gt; 'required|string',\n            // Otras reglas de validaci\u00f3n seg\u00fan tus necesidades\n        ];\n    }\n</code></pre> <p>Tras esto no necesitariamos validar en el controlador directamente sino que implementariamos el siguiente c\u00f3digo:</p> <pre><code>public function store(CreateNombreRequest $request) {\n  return new NombreResource(Nombre::create($request-&gt;all()));\n}\n</code></pre>"},{"location":"frameworks/BackEnd/PHP-Laravel/#validacion-de-campos-en-el-controlador","title":"Validaci\u00f3n de campos en el controlador","text":"<p>Para validar campos en el controlador implementamos el siguiente c\u00f3digo dentro de nuestra funci\u00f3n:</p> <pre><code>$validator = Validator::make($request-&gt;all(), [\n  \"id\" =&gt; \"required|exists:processes,id\",\n  \"code\" =&gt; \"required|string|max:250\",\n  \"description\" =&gt; \"required\",\n  \"date\" =&gt; \"required\",\n]);\n\nif ($validator-&gt;fails()) {\n  return response()-&gt;json($validator-&gt;errors(), 400);\n}\n</code></pre> <p>El id solo si es necesario comprobarlo si ese objeto existe en la base de datos para una actualizaci\u00f3n.</p>"},{"location":"frameworks/BackEnd/Spring-Boot/","title":"Spring-Boot","text":"SPRING BOOT"},{"location":"frameworks/FrontEnd/Angular/","title":"Angular","text":""},{"location":"frameworks/FrontEnd/Angular/#instalacion-y-creacion-de-un-nuevo-proyecto","title":"Instalaci\u00f3n y creaci\u00f3n de un nuevo proyecto","text":""},{"location":"frameworks/FrontEnd/Angular/#intalar-nodejs","title":"Intalar node.js","text":"<p>Es recomendable el uso de nvm para el control de versiones, por lo que lo instalaremos en lugar del node.js.</p> <p>Una vez instalado nvm instalamos la \u00faltima versi\u00f3n o la que necesitemos para el proyecto en el que vamos a trabajar.</p> <p>Podemos obtener una lista de las versiones disponibles usando el comando: </p> <pre><code>nvm ls available\n</code></pre> <p>Para instalar la versi\u00f3n de node utilizaremos el siguiente comando sustituyendo el n\u00famero por la versi\u00f3n que nosotros deseemos: </p> <pre><code>nvm install 20.0.0\n</code></pre> <p>Para obtener una lista de las versiones disponibles instaladas previamente podemos utilizar el comando:</p> <pre><code>nvm ls\n</code></pre> <p>Para indicar que versi\u00f3n queremos utilizar usaremos el siguiente comando sustituyendo el n\u00famero por la versi\u00f3n que nosotros deseemos usar de la lista de versiones disponibles ya instaladas previamente:</p> <pre><code>nvm use 20.0.0\n</code></pre>"},{"location":"frameworks/FrontEnd/Angular/#instalar-angular","title":"Instalar Angular","text":"<p>Para instalar Angular de forma global tenemos que utilizar el comando:</p> <pre><code>npm install -g @angular/cli\n</code></pre> <p>Para instalar Angular en un proyecto tenemos que utilizar el comando desde la terminal ubic\u00e1ndose en el proyecto:</p> <pre><code>npm install @angular/cli\n</code></pre>"},{"location":"frameworks/FrontEnd/Angular/#versiones","title":"Versiones","text":"<p>Comandos para el control de versiones:</p> <ul> <li>nvm</li> </ul> <pre><code>nvm version\n</code></pre> <ul> <li>node.js</li> </ul> <pre><code>node -v\n</code></pre> <ul> <li>npm</li> </ul> <pre><code>npm -v\n</code></pre> <ul> <li>Angular</li> </ul> <pre><code>ng version\n</code></pre> <p>Si no nos permite comprobar la versi\u00f3n de Angular utilizaremos el siguiente comando:</p> <pre><code>Set-ExecutionPolicy - ExecutionPolicy RemoteSigned -Scope CurrentUser\n</code></pre>"},{"location":"frameworks/FrontEnd/Angular/#creacion-de-un-nuevo-proyecto","title":"Creaci\u00f3n de un nuevo proyecto","text":"<p>Para crear un nuevo proyecto standalone en Angular utilizamos en comando:</p> <pre><code>ng new nombreAplicacion\n</code></pre> <p>Si queremos crear un nuevo proyecto sin que sea standalone usamos:</p> <pre><code>ng new nombreAplicacion --standalone=false\n</code></pre> <p>El archivo package.json muestra las dependencias instaladas, la versi\u00f3n de angular y los comandos habilitados por Angular en el proyecto.</p> <p>Para iniciar el proyecto usamos el comando:</p> <pre><code>ng serve\n</code></pre>"},{"location":"frameworks/FrontEnd/Angular/#navegacion","title":"Navegaci\u00f3n","text":""},{"location":"frameworks/FrontEnd/Angular/#rutas","title":"Rutas","text":"<p>En el <code>app-routing.module.ts</code> se establecen las rutas de la siguiente manera:</p> <pre><code>const routes = [\n   {\n      path: 'route',\n      component: Component\n   },\n   {\n      path: 'route',\n      component: Component\n   }\n];\n</code></pre> <p>Para navegar a una ruta usaremos <code>[routerLink]=\"['/route']\"</code></p>"},{"location":"frameworks/FrontEnd/Angular/#ruta-por-defecto","title":"Ruta por defecto","text":"<p>Para a\u00f1adir una ruta por defecto:</p> <pre><code>{ path: '', redirectTo: '/', pathMatch: 'full' },\n</code></pre>"},{"location":"frameworks/FrontEnd/Angular/#rutas-hijas","title":"Rutas hijas","text":"<p>Si se quiere establecer una ruta como hija de otra:</p> <pre><code>const routes: Routes = [\n  {\n    path: 'father',\n    component: FatherComponent,\n    children: [\n      {\n        path: 'child',\n        component: ChildComponent\n      }\n   ]\n}];\n</code></pre> <p>Para navegar a la ruta usaremos <code>[routerLink]=\"['/father/child']</code>.</p>"},{"location":"frameworks/FrontEnd/Angular/#envio-de-informacion-en-la-ruta","title":"Envio de informaci\u00f3n en la ruta","text":"<p>Si queremos enviar alg\u00fan dato en la url para obtenerla en el componente al que se navega:</p> <pre><code>{\n   path: 'detail/:detailInfo',\n   component: DetailComponent\n}\n</code></pre> <p>Se navega desde el html con <code>[routerLink]=\"['/detail', detailInfo]\"</code> en un elemento <code>&lt;a&gt;</code></p> <p>Para acceder a los par\u00e1metros de la ruta primero se debe implementar:</p> <pre><code>import { ActivatedRoute } from '@angular/router';\nconstructor (private route: ActivatedRoute) {}\n\nconst routeParams = this.route.snapshot.paramMap;\nconst detailInfo = routeParams.get('detailInfo');\n</code></pre> <p>De tal forma que la ruta para acceder al component ser\u00eda <code>father/child</code>, adem\u00e1s de que se aplicar\u00eda a trav\u00e9s del <code>&lt;router-outlet&gt;&lt;/router-outlet&gt;</code>en caso de haberlo.</p> <p>La mejor forma de organizar las rutas de una web ser\u00eda tener tres rutas principales: - Login - Registro - Main: esta ser\u00eda la ruta padre de todas las dem\u00e1s, de manera que as\u00ed podr\u00edamos tener una p\u00e1gina base con su respectivo men\u00fa y caracter\u00edsticas comunes y las hijas que las compartir\u00edan.</p> <p>Para generar un nuevo component usamos el comando:</p> <pre><code>ng generate component directorio/nombreComponente\n</code></pre> <p>Para generar un nuevo module se usa el comando:</p> <pre><code>ng generate module directorio/nombreModulo\n</code></pre> <p>Para generar un nuevo service se utiliza el comando:</p> <pre><code>ng generate service directorio/nombreServicio\n</code></pre> <p>Para generar una nueva pipe se utiliza el comando</p> <pre><code>ng generate pipe directorio/pipes\n</code></pre>"},{"location":"frameworks/FrontEnd/mkdocs/","title":"Gu\u00eda de Configuraci\u00f3n de MkDocs","text":"<p>\u00a1Bienvenido a la gu\u00eda de configuraci\u00f3n de MkDocs! Aqu\u00ed te explicamos c\u00f3mo iniciar, configurar y personalizar tu proyecto de documentaci\u00f3n usando MkDocs.</p>"},{"location":"frameworks/FrontEnd/mkdocs/#introduccion","title":"Introducci\u00f3n","text":"<p>MkDocs es una herramienta de generaci\u00f3n de sitios est\u00e1ticos que se centra en la creaci\u00f3n de documentaci\u00f3n de proyectos. Es f\u00e1cil de configurar y permite generar documentaci\u00f3n elegante usando Markdown.</p>"},{"location":"frameworks/FrontEnd/mkdocs/#caracteristicas-principales","title":"Caracter\u00edsticas Principales","text":"<ul> <li>Simplicidad: Usa Markdown para escribir tus documentos.</li> <li>Temas: Incluye varios temas atractivos, incluyendo Material Design.</li> <li>Despliegue f\u00e1cil: Publica en GitHub Pages, GitLab Pages, o tu servidor preferido.</li> </ul>"},{"location":"frameworks/FrontEnd/mkdocs/#instalacion","title":"Instalaci\u00f3n","text":"<p>Para instalar MkDocs, necesitas tener Python y <code>pip</code> instalados en tu sistema.</p> <pre><code>pip install mkdocs\n</code></pre>"},{"location":"frameworks/FrontEnd/mkdocs/#verificar-la-instalacion","title":"Verificar la Instalaci\u00f3n","text":"<p>Para asegurarte de que MkDocs se ha instalado correctamente, ejecuta el siguiente comando:</p> <pre><code>mkdocs --version\n</code></pre> <p>Deber\u00edas ver la versi\u00f3n de MkDocs que has instalado.</p>"},{"location":"frameworks/FrontEnd/mkdocs/#creacion-de-un-proyecto-nuevo","title":"Creaci\u00f3n de un Proyecto Nuevo","text":"<p>Para crear un proyecto nuevo, usa el siguiente comando:</p> <pre><code>mkdocs new nombre-de-tu-proyecto\n</code></pre> <p>Esto crear\u00e1 una estructura b\u00e1sica de archivos y carpetas que puedes empezar a personalizar.</p>"},{"location":"frameworks/FrontEnd/mkdocs/#estructura-de-carpetas","title":"Estructura de Carpetas","text":"<p>Un proyecto t\u00edpico de MkDocs tendr\u00e1 la siguiente estructura de carpetas:</p> <pre><code>nombre-de-tu-proyecto/\n\u251c\u2500\u2500 docs/\n\u2502   \u2514\u2500\u2500 index.md\n\u2514\u2500\u2500 mkdocs.yml\n</code></pre> <ul> <li>docs/: Aqu\u00ed es donde ir\u00e1n todos tus archivos de documentaci\u00f3n en formato Markdown.</li> <li>mkdocs.yml: Este es el archivo de configuraci\u00f3n principal de MkDocs.</li> </ul>"},{"location":"frameworks/FrontEnd/mkdocs/#configuracion-basica","title":"Configuraci\u00f3n B\u00e1sica","text":"<p>El archivo mkdocs.yml es donde configurar\u00e1s tu sitio de documentaci\u00f3n. Aqu\u00ed un ejemplo b\u00e1sico:</p> <pre><code>site_name: Mi Proyecto\ntheme:\n  name: material\n\nnav:\n  - Inicio: index.md\n  - Acerca de: about.md\n</code></pre>"},{"location":"frameworks/FrontEnd/mkdocs/#personalizacion","title":"Personalizaci\u00f3n","text":"<p>Puedes personalizar tu sitio modificando el archivo mkdocs.yml. Algunas opciones comunes incluyen:</p> <ul> <li>Cambiar el tema: Hay varios temas disponibles que puedes usar.</li> <li>A\u00f1adir un favicon: Puedes a\u00f1adir un \u00edcono personalizado a tu sitio.</li> </ul> <pre><code>extra:\n  favicon: 'img/logo.png'\n</code></pre>"},{"location":"frameworks/FrontEnd/mkdocs/#desarrollando-el-sitio","title":"Desarrollando el Sitio","text":"<p>Durante el desarrollo, puedes usar el servidor de desarrollo integrado de MkDocs para ver los cambios en tiempo real:</p> <pre><code>mkdocs serve\n</code></pre> <p>Esto abrir\u00e1 un servidor en http://127.0.0.1:8000/ donde podr\u00e1s ver tu sitio.</p>"},{"location":"frameworks/FrontEnd/mkdocs/#despliegue-del-sitio","title":"Despliegue del Sitio","text":"<p>Para desplegar tu sitio, primero debes construirlo con el comando:</p> <pre><code>mkdocs build\n</code></pre> <p>Esto generar\u00e1 una carpeta site/ con todos los archivos est\u00e1ticos de tu sitio. Puedes subir esta carpeta a cualquier servidor o servicio de hosting, como GitHub Pages.</p>"},{"location":"frameworks/FrontEnd/mkdocs/#ejemplo-completo-de-mkdocsyml","title":"Ejemplo Completo de mkdocs.yml","text":"<p>Aqu\u00ed tienes un ejemplo m\u00e1s completo de un archivo mkdocs.yml:</p> <pre><code>site_name: Documentaci\u00f3n de Ejemplo\n\ntheme:\n  name: material\n  language: es\n  logo: img/logo.png\n  favicon: 'img/logo.png'\n  features:\n    - content.code.copy\n\nnav:\n  - Inicio: index.md\n  - Gu\u00eda de Usuario:\n      - Instalaci\u00f3n: user-guide/installation.md\n      - Configuraci\u00f3n: user-guide/configuration.md\n  - Referencia: reference.md\n  - Acerca de: about.md\n</code></pre>"},{"location":"frameworks/FrontEnd/mkdocs/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li> <p>Documentaci\u00f3n Oficial de MkDocs</p> </li> <li> <p>Tema Material para MkDocs</p> </li> </ul>"},{"location":"languages/Python/","title":"Python","text":""},{"location":"languages/Python/#funcionalidades-basicas","title":"Funcionalidades b\u00e1sicas","text":""},{"location":"languages/Python/#print","title":"Print","text":"<pre><code>print(\"Hola mundo\")\n</code></pre> <pre><code>print(\"Primera l\u00ednea\\nSegunda l\u00ednea\\nTercera l\u00ednea\")\n</code></pre> <pre><code>print(\"Primera l\u00ednea\", end=\" \")\nprint(\"Segunda l\u00ednea\", end=\" \")\nprint(\"Tercera l\u00ednea\")\n</code></pre>"},{"location":"languages/Python/#input","title":"Input","text":"<pre><code>nombre = input(\"\u00bfCu\u00e1l es tu nombre? \")\n</code></pre>"},{"location":"languages/Python/#longitud","title":"Longitud","text":"<pre><code>mi_lista = [1, 2, 3, 4, 5]\nprint(len(mi_lista))  # Output: 5\n</code></pre>"},{"location":"languages/Python/#type","title":"Type","text":"<pre><code>print(type(123))          # Output: &lt;class 'int'&gt;\nprint(type(3.14))         # Output: &lt;class 'float'&gt;\nprint(type(\"Hola\"))       # Output: &lt;class 'str'&gt;\nprint(type([1, 2, 3]))    # Output: &lt;class 'list'&gt;\n</code></pre>"},{"location":"languages/Python/#conversion-de-tipos","title":"Conversi\u00f3n de tipos","text":"<pre><code>print(int(\"123\"))       # Output: 123\nprint(float(\"3.14\"))    # Output: 3.14\nprint(str(123))         # Output: '123'\nprint(list(\"Hola\"))     # Output: ['H', 'o', 'l', 'a']\n</code></pre>"},{"location":"languages/Python/#range","title":"Range","text":"<p>La funci\u00f3n range() se utiliza para generar una secuencia de n\u00fameros. Com\u00fanmente se usa en bucles for.</p> <pre><code>range(inicio, fin, paso)\n</code></pre> <p>NOTE inicio: El valor inicial de la secuencia (por defecto es 0). fin: El valor final de la secuencia (no se incluye en la secuencia). paso: El incremento entre los n\u00fameros (por defecto es 1).</p>"},{"location":"languages/Python/#max-y-min","title":"Max y Min","text":"<pre><code>mi_lista = [1, 2, 3, 4, 5]\nprint(max(mi_lista))  # Output: 5\nprint(min(mi_lista))  # Output: 1\n</code></pre> <pre><code>cadena = \"Python\"\nprint(max(cadena))  # Output: 'y'\n\ncadena = \"Python\"\nprint(min(cadena))  # Output: 'P'\n</code></pre> <pre><code>lista = [\"manzana\", \"banana\", \"cereza\", \"uva\"]\nprint(max(lista))  # Output: 'uva'\n\nlista = [\"manzana\", \"banana\", \"cereza\", \"uva\"]\nprint(min(lista))  # Output: 'banana'\n</code></pre> <p>NOTE Las comparaciones de cadenas de texto se hacen car\u00e1cter por car\u00e1cter en el orden de sus valores ASCII</p>"},{"location":"languages/Python/#sorted","title":"Sorted","text":"<pre><code>mi_lista = [5, 2, 3, 1, 4]\nprint(sorted(mi_lista))  # Output: [1, 2, 3, 4, 5]\n</code></pre>"},{"location":"languages/Python/#zip","title":"Zip","text":"<p>La funci\u00f3n zip() combina varios iterables, emparejando elementos en tuplas.</p> <pre><code>nombres = [\"Juan\", \"Maria\", \"Pedro\"]\nedades = [30, 25, 40]\ncombinados = zip(nombres, edades)\nprint(list(combinados))  # Output: [('Juan', 30), ('Maria', 25), ('Pedro', 40)]\n</code></pre>"},{"location":"languages/Python/#variables","title":"Variables","text":""},{"location":"languages/Python/#arrays","title":"Arrays","text":"<p>NOTE Los elementos de las listas pueden ser de distintos tipos</p>"},{"location":"languages/Python/#declarar-una-lista-vacia","title":"Declarar una lista vacia","text":"<pre><code>mi_lista = []\n</code></pre>"},{"location":"languages/Python/#declarar-una-lista-con-valores","title":"Declarar una lista con valores","text":"<pre><code>lista = [1, 2, 3, 4, 5]\n</code></pre>"},{"location":"languages/Python/#anadir-un-elemento-al-final-de-la-lista","title":"A\u00f1adir un elemento al final de la lista","text":"<pre><code>lista.append(6)\n</code></pre>"},{"location":"languages/Python/#eliminar-un-elemento-de-la-lista-por-su-indice","title":"Eliminar un elemento de la lista por su indice","text":"<pre><code>del lista[2]\n</code></pre>"},{"location":"languages/Python/#obtener-la-longitud-de-la-lista","title":"Obtener la longitud de la lista","text":"<pre><code>longitud = len(lista)\n</code></pre>"},{"location":"languages/Python/#recorrer-una-lista","title":"Recorrer una lista","text":"<pre><code>for elemento in lista:\n    print(elemento)\n</code></pre>"},{"location":"languages/Python/#saber-si-un-elemento-se-encuentra-en-la-lista","title":"Saber si un elemento se encuentra en la lista","text":"<pre><code>if 3 in lista:\n    print(\"El elemento 3 est\u00e1 en la lista\")\n</code></pre>"},{"location":"languages/Python/#tuplas","title":"Tuplas","text":"<p>Note Son similares a las listas, pero son inmutables, es decir, no se pueden modificar despu\u00e9s de haber sido creadas.</p>"},{"location":"languages/Python/#declarar-una-tupla","title":"Declarar una tupla","text":"<pre><code>tupla = (1, 2, 3, \"cuatro\")\n</code></pre>"},{"location":"languages/Python/#desempaquetado-de-una-tupla","title":"Desempaquetado de una tupla","text":"<pre><code>tupla_empaquetada = 1, 2, 3\na, b, c = tupla_empaquetada\nprint(a, b, c)\n</code></pre>"},{"location":"languages/Python/#diccionarios","title":"Diccionarios","text":""},{"location":"languages/Python/#declarar-un-diccionario","title":"Declarar un diccionario","text":"<pre><code>mi_diccionario = {\"nombre\": \"Juan\", \"edad\": 30, \"ciudad\": \"Madrid\"}\n</code></pre>"},{"location":"languages/Python/#anadir-elementos-a-un-diccionario","title":"A\u00f1adir elementos a un diccionario","text":"<pre><code>mi_diccionario[\"profesion\"] = \"Programador\"\n</code></pre>"},{"location":"languages/Python/#eliminar-elementos-de-un-diccionario","title":"Eliminar elementos de un diccionario","text":"<pre><code>del mi_diccionario[\"ciudad\"]\n</code></pre>"},{"location":"languages/Python/#longitud-de-un-diccionario","title":"Longitud de un diccionario","text":"<pre><code>longitud = len(mi_diccionario)\n</code></pre>"},{"location":"languages/Python/#iterar-sobre-un-diccionario","title":"Iterar sobre un diccionario","text":"<pre><code># Iterar sobre claves\nfor clave in mi_diccionario:\n    print(clave)\n\n# Iterar sobre valores\nfor valor in mi_diccionario.values():\n    print(valor)\n\n# Iterar sobre pares clave-valor\nfor clave, valor in mi_diccionario.items():\n    print(clave, valor)\n</code></pre>"},{"location":"languages/Python/#conjuntos","title":"Conjuntos","text":""},{"location":"languages/Python/#declarar-un-conjunto","title":"Declarar un conjunto","text":"<pre><code>mi_conjunto = {1, 2, 3, 4, 5}\n</code></pre>"},{"location":"languages/Python/#declarar-un-conjunto-vacio","title":"Declarar un conjunto vacio","text":"<pre><code>conjunto_vacio = set()\n</code></pre>"},{"location":"languages/Python/#anadir-elementos-a-un-conjunto","title":"A\u00f1adir elementos a un conjunto","text":"<pre><code>mi_conjunto.add(6)\n</code></pre>"},{"location":"languages/Python/#eliminar-elementos-de-un-conjunto","title":"Eliminar elementos de un conjunto","text":"<pre><code>mi_conjunto.remove(3)\n</code></pre>"},{"location":"languages/Python/#iteracion-sobre-un-conjunto","title":"Iteracion sobre un conjunto","text":"<pre><code>for elemento in mi_conjunto:\n    print(elemento)\n</code></pre>"},{"location":"languages/Python/#unir-conjuntos","title":"Unir conjuntos","text":"<pre><code>conjunto1 = {1, 2, 3}\nconjunto2 = {3, 4, 5}\nunion = conjunto1.union(conjunto2)\n</code></pre>"},{"location":"languages/Python/#interseccion-entre-dos-conjuntos","title":"Interseccion entre dos conjuntos","text":"<pre><code>conjunto1 = {1, 2, 3}\nconjunto2 = {3, 4, 5}\ninterseccion = conjunto1.intersection(conjunto2) #Output: 3\n</code></pre>"},{"location":"languages/Python/#diferencia-entre-dos-conjuntos","title":"Diferencia entre dos conjuntos","text":"<pre><code>conjunto1 = {1, 2, 3}\nconjunto2 = {3, 4, 5}\ndiferencia  = conjunto1.difference(conjunto2) # Output: {1, 2}\n</code></pre> <pre><code>conjunto1 = {1, 2, 3}\nconjunto2 = {3, 4, 5}\ndiferencia  = conjunto2.difference(conjunto1) # Output: {4, 5}\n</code></pre> <p>NOTE Cuando hacemos <code>conjunto1.difference(conjunto2)</code>, obtenemos los elementos que est\u00e1n en conjunto1 pero no en conjunto2. Si hacemos <code>conjunto2.difference(conjunto1)</code> obtenemos los elementos que est\u00e1n en conjunto2 pero no en conjunto1.</p>"},{"location":"languages/Python/#estructuras-de-control","title":"Estructuras de control","text":""},{"location":"languages/Python/#if","title":"If","text":"<pre><code>if edad &gt;= 18:\n    print(\"Eres mayor de edad\")\nelse:\n    print(\"Eres menor de edad\")\n</code></pre>"},{"location":"languages/Python/#while","title":"While","text":"<pre><code>contador = 0\nwhile contador &lt; 5:\n    print(\"El contador es:\", contador)\n    contador += 1\n</code></pre>"},{"location":"languages/Python/#for","title":"For","text":"<pre><code>frutas = [\"manzana\", \"banana\", \"cereza\"]\nfor fruta in frutas:\n    print(fruta)\n</code></pre> <pre><code>for contador in range(5):\n    print(\"El contador es:\", contador)\n</code></pre>"},{"location":"languages/Python/#funciones","title":"Funciones","text":"<pre><code>def suma(a, b):\n    \"\"\"Esta funci\u00f3n devuelve la suma de dos n\u00fameros.\"\"\"\n    return a + b\n\nprint(suma(2, 3))\n</code></pre> <pre><code>def saludar(nombre):\n    \"\"\"Esta funci\u00f3n imprime un saludo.\"\"\"\n    print(\"\u00a1Hola,\", nombre, \"!\")\n\nsaludar(\"juan\")\n</code></pre>"},{"location":"languages/Python/#desempaquetado-de-argumentos","title":"Desempaquetado de Argumentos","text":"<pre><code>def sumar(*args):\n    total = 0\n    for numero in args:\n        total += numero\n    return total\n\nresultado = sumar(1, 2, 3, 4, 5)\nprint(resultado)  # Output: 15\n</code></pre> <p>NOTE Puedes pasar un n\u00famero variable de argumentos a una funci\u00f3n utilizando <code>*args</code>. Esto permite que una funci\u00f3n acepte cualquier n\u00famero de argumentos posicionales.</p>"},{"location":"languages/Python/#argumentos-de-palabras-clave-arbitrarios","title":"Argumentos de Palabras Clave Arbitrarios","text":"<pre><code>def imprimir_informacion(**kwargs):\n    for clave, valor in kwargs.items():\n        print(clave + \":\", valor)\n\nimprimir_informacion(nombre=\"Juan\", edad=30, ciudad=\"Ciudad de M\u00e9xico\")\n</code></pre> <p>NOTE De manera similar al desempaquetado de argumentos, puedes pasar un n\u00famero variable de argumentos de palabras clave utilizando <code>**kwargs</code>.</p>"},{"location":"languages/Python/#documentacion-de-funciones","title":"Documentaci\u00f3n de funciones","text":"<pre><code>def suma(a, b):\n    \"\"\"Esta funci\u00f3n devuelve la suma de dos n\u00fameros.\"\"\"\n    return a + b\n\nhelp(suma) # Muestra la cadena de documentaci\u00f3n de la funci\u00f3n\n</code></pre>"},{"location":"languages/Python/#objetos","title":"Objetos","text":""},{"location":"languages/Python/#definir-una-clase","title":"Definir una clase","text":"<pre><code>class Persona:\n    def __init__(self, nombre, edad): # Contructor\n        self.nombre = nombre\n        self.edad = edad\n\n    def saludar(self):\n        print(f\"Hola, mi nombre es {self.nombre} y tengo {self.edad} a\u00f1os.\")\n</code></pre>"},{"location":"languages/Python/#crear-un-objeto","title":"Crear un objeto","text":"<pre><code>juan = Persona(\"Juan\", 30)\n</code></pre>"},{"location":"languages/Python/#acceder-a-los-atributos-del-objeto","title":"Acceder a los atributos del objeto:","text":"<pre><code>print(juan.nombre)\n</code></pre>"},{"location":"languages/Python/#modificar-los-atributos-de-un-objeto","title":"Modificar los atributos de un objeto","text":"<pre><code>juan.nombre = \"Juan Carlos\"\n</code></pre>"},{"location":"languages/Python/#comprobar-si-un-objeto-tiene-un-atributo-especifico","title":"Comprobar si un objeto tiene un atributo especifico","text":"<pre><code>print(hasattr(juan, \"apellidos\")) # Output: False\n</code></pre>"},{"location":"languages/Python/#obtener-el-valor-de-un-atributo-si-existe-o-si-no-devolver-un-mensaje-predefinido","title":"Obtener el valor de un atributo si existe o si no devolver un mensaje predefinido","text":"<pre><code>print(getattr(juan, \"apellidos\", \"El objeto 'juan' tiene apellidos definidos\"))\n# Output: El objeto 'juan' no tiene apellidos definido\n</code></pre>"},{"location":"languages/Python/#ordenar-objetos","title":"Ordenar objetos","text":"<pre><code>personas_ordenadas = sorted(personas, key=lambda x: x.edad)\n\npersonas.sort(key=lambda x: x.edad)\n</code></pre>"},{"location":"languages/Python/#manejo-de-ficheros-y-directorios","title":"Manejo de ficheros y directorios","text":""},{"location":"languages/Python/#crear-un-directorio","title":"Crear un directorio","text":"<pre><code>import os\n\nos.makedirs(\"nombre_directorio\")\n</code></pre>"},{"location":"languages/Python/#crear-un-archivo","title":"Crear un archivo","text":"<pre><code>nombre_archivo = \"nuevo_archivo.txt\"\n\nwith open(nombre_archivo, 'w') as archivo:\n    archivo.write(\"Este es el contenido del archivo.\\n\")\n</code></pre>"},{"location":"languages/Python/#listar-el-contenido-de-un-directorio","title":"Listar el contenido de un directorio","text":"<pre><code>contenido_directorio = os.listdir()\n\nfor elemento in contenido_directorio:\n    print(elemento)\n</code></pre>"},{"location":"languages/Python/#listar-el-contenido-de-un-directorio-y-el-contenido-de-sus-subdirectorios","title":"Listar el contenido de un directorio y el contenido de sus subdirectorios","text":"<pre><code>import os\n\ndef listar_contenido_directorio(directorio):\n    for directorio_actual, subdirectorios, archivos in os.walk(directorio):\n        print(f\"Contenido de {directorio_actual}:\")\n\n        for archivo in archivos:\n            print(os.path.join(directorio_actual, archivo))\n\n        for subdirectorio in subdirectorios:\n            print(os.path.join(directorio_actual, subdirectorio))\n\ndirectorio = \"ruta/al/directorio\"\n\nlistar_contenido_directorio(directorio)\n</code></pre>"},{"location":"languages/Python/#renombrar-un-archivo-o-directorio","title":"Renombrar un archivo o directorio","text":"<pre><code>import os\n\nnombre_original = \"antiguo_nombre.txt\"\nnuevo_nombre = \"nuevo_nombre.txt\"\n\nos.rename(nombre_original, nuevo_nombre)\n</code></pre>"},{"location":"languages/Python/#eliminar-un-archivo","title":"Eliminar un archivo","text":"<pre><code>import os\n\nnombre_archivo_a_eliminar = \"archivo_a_eliminar.txt\"\n\nos.remove(nombre_archivo_a_eliminar)\n</code></pre>"},{"location":"languages/Python/#eliminar-un-directorio-y-su-contenido","title":"Eliminar un directorio y su contenido","text":"<pre><code>import shutil\n\nnombre_directorio_a_eliminar = \"directorio_a_eliminar\"\n\nshutil.rmtree(nombre_directorio_a_eliminar)\n</code></pre>"},{"location":"languages/Python/#mover-archivo","title":"Mover archivo","text":"<pre><code>import shutil\n\nubicacion_original = \"ruta/al/archivo/original.txt\"\nubicacion_destino = \"ruta/a/la/ubicacion/de/destino/archivo.txt\"\n\nshutil.move(ubicacion_original, ubicacion_destino)\n</code></pre>"},{"location":"languages/Python/#mover-directorio","title":"Mover directorio","text":"<pre><code>ubicacion_directorio_original = \"ruta/al/directorio/original\"\nubicacion_directorio_destino = \"ruta/a/la/ubicacion/de/destino/directorio\"\n\nshutil.move(ubicacion_directorio_original, ubicacion_directorio_destino)\n</code></pre>"},{"location":"languages/Python/#lectura-de-ficheros","title":"Lectura de ficheros","text":""},{"location":"languages/Python/#leer-todo-el-contenido-del-fichero-como-una-cadena-de-texto","title":"Leer todo el contenido del fichero como una cadena de texto","text":"<pre><code>with open(\"archivo.txt\", \"r\") as archivo:\n    contenido = archivo.read()\n    print(contenido)\n</code></pre>"},{"location":"languages/Python/#leer-un-archivo-linea-a-linea","title":"Leer un archivo linea a linea","text":"<pre><code>with open(\"archivo.txt\", \"r\") as archivo:\n    linea = archivo.readline()\n    while linea:\n        print(linea, end=\"\")\n        linea = archivo.readline()\n</code></pre>"},{"location":"languages/Python/#obtener-una-lista-con-las-lineas-del-archivo","title":"Obtener una lista con las lineas del archivo","text":"<pre><code>with open(\"archivo.txt\", \"r\") as archivo:\n    lineas = archivo.readlines()\n    for linea in lineas:\n        print(linea, end=\"\")\n</code></pre> <pre><code>with open(\"archivo.txt\", \"r\") as archivo:\n    for linea in archivo:\n        print(linea, end=\"\")\n</code></pre>"},{"location":"languages/Python/#lectura-de-archivos-binarios","title":"Lectura de archivos binarios","text":"<pre><code>with open(\"archivo.bin\", \"rb\") as archivo_binario:\n    datos = archivo_binario.read()\n</code></pre>"},{"location":"languages/Python/#lectura-de-ficheros-csv","title":"Lectura de ficheros CSV","text":""},{"location":"languages/Python/#leer-el-archivo-csv-linea-a-linea","title":"Leer el archivo CSV linea a linea","text":"<pre><code>import csv\n\nwith open(\"datos.csv\", newline=\"\") as archivo_csv:\n    lector_csv = csv.reader(archivo_csv)\n\n    for fila in lector_csv:\n        print(fila)\n</code></pre>"},{"location":"languages/Python/#almacenarlo-en-un-diccionario","title":"Almacenarlo en un diccionario","text":"<pre><code>import csv\n\ndatos_diccionario = []\n\nwith open(\"datos.csv\", newline=\"\") as archivo_csv:\n    lector_csv = csv.DictReader(archivo_csv)\n\n    for fila in lector_csv:\n        datos_diccionario.append(fila)\n</code></pre>"},{"location":"languages/Python/#almacenarlo-en-una-coleccion-de-objetos","title":"Almacenarlo en una coleccion de objetos","text":"<pre><code>import csv\n\npersonas = []\n\nwith open(\"datos.csv\", newline=\"\") as archivo_csv:\n    lector_csv = csv.reader(archivo_csv)\n\n    for fila in lector_csv:\n        nombre, edad, ciudad = fila\n        persona = Persona(nombre, edad, ciudad)\n        personas.append(persona)\n</code></pre>"},{"location":"languages/Python/#escritura-de-ficheros","title":"Escritura de ficheros","text":""},{"location":"languages/Python/#escribir-en-un-archivo-de-texto","title":"Escribir en un archivo de texto","text":"<pre><code>with open(\"archivo.txt\", \"w\") as archivo:\n    archivo.write(\"Hola, mundo!\\n\")\n    archivo.write(\"Este es un archivo de texto generado por Python.\\n\")\n    archivo.write(\"Adi\u00f3s, mundo!\")\n</code></pre>"},{"location":"languages/Python/#agregar-contenido-a-un-archivo-existente","title":"Agregar contenido a un archivo existente","text":"<pre><code>with open(\"archivo.txt\", \"a\") as archivo:\n    archivo.write(\"\\n\u00a1Esto se a\u00f1ade al final del archivo!\")\n</code></pre>"},{"location":"languages/Python/#escribir-en-un-archivo-csv","title":"Escribir en un archivo CSV","text":"<pre><code>import csv\n\ndatos = [\n    [\"Nombre\", \"Edad\", \"Ciudad\"],\n    [\"Juan\", 30, \"Ciudad de M\u00e9xico\"],\n    [\"Mar\u00eda\", 25, \"Guadalajara\"],\n    [\"Pedro\", 40, \"Monterrey\"]\n]\n\nwith open(\"datos.csv\", \"w\", newline=\"\") as archivo_csv:\n    escritor_csv = csv.writer(archivo_csv)\n\n    for fila in datos:\n        escritor_csv.writerow(fila)\n</code></pre>"},{"location":"languages/Python/#lectura-y-escritura-de-objetos-usando-pickle","title":"Lectura y escritura de objetos usando pickle","text":""},{"location":"languages/Python/#lectura","title":"Lectura","text":"<pre><code>import pickle\n\nwith open(\"objetos.pkl\", \"rb\") as archivo:\n    personas_recuperadas = pickle.load(archivo)\n\nfor persona in personas_recuperadas:\n    print(persona.nombre, persona.edad)\n</code></pre>"},{"location":"languages/Python/#escritura","title":"Escritura","text":"<pre><code>import pickle\n\npersonas = [juan, maria, pedro]\n\nwith open(\"objetos.pkl\", \"wb\") as archivo:\n    pickle.dump(personas, archivo)\n</code></pre>"},{"location":"languages/Python/#bases-de-datos","title":"Bases de datos","text":""},{"location":"languages/Python/#sqlite","title":"SQLite","text":"<pre><code>import sqlite3\n</code></pre>"},{"location":"languages/Python/#conectar-a-una-base-de-datos","title":"Conectar a una base de datos","text":"<pre><code>conexion = sqlite3.connect('ejemplo.db')\n</code></pre>"},{"location":"languages/Python/#crear-un-cursor","title":"Crear un cursor","text":"<pre><code>cursor = conexion.cursor()\n</code></pre>"},{"location":"languages/Python/#crear-una-tabla","title":"Crear una tabla","text":"<pre><code>cursor.execute('''CREATE TABLE IF NOT EXISTS usuarios (\n                    id INTEGER PRIMARY KEY,\n                    nombre TEXT,\n                    edad INTEGER\n                )''')\n</code></pre>"},{"location":"languages/Python/#insertar-datos","title":"Insertar datos","text":"<pre><code>cursor.execute(\"INSERT INTO usuarios (nombre, edad) VALUES (?, ?)\", ('Juan', 30))\n</code></pre>"},{"location":"languages/Python/#guardar-los-cambios","title":"Guardar los cambios","text":"<pre><code>conexion.commit()\n</code></pre>"},{"location":"languages/Python/#obtener-datos","title":"Obtener datos","text":"<pre><code>cursor.execute(\"SELECT * FROM usuarios\")\n\nfilas = cursor.fetchall()\n</code></pre>"},{"location":"languages/Python/#3-cerrar-la-conexion","title":"3 Cerrar la conexi\u00f3n","text":"<pre><code>conexion.close()\n</code></pre>"},{"location":"languages/Python/#postgresql","title":"PostgreSQL","text":"<p>NOTE Hay que instalar previamente psycopg2</p> <pre><code>pip install psycopg2\n</code></pre> <pre><code>import psycopg2\n</code></pre>"},{"location":"languages/Python/#conectar-a-una-base-de-datos_1","title":"Conectar a una base de datos","text":"<pre><code>conexion = psycopg2.connect(\n    host=\"localhost\",\n    database=\"nombre_de_la_base_de_datos\",\n    user=\"nombre_de_usuario\",\n    password=\"contrase\u00f1a\"\n)\n</code></pre>"},{"location":"languages/Python/#crear-un-cursor_1","title":"Crear un cursor","text":"<pre><code>cursor = conexion.cursor()\n</code></pre>"},{"location":"languages/Python/#crear-una-tabla_1","title":"Crear una tabla","text":"<pre><code>cursor.execute(\"\"\"\n        CREATE TABLE IF NOT EXISTS usuarios (\n            id SERIAL PRIMARY KEY,\n            nombre TEXT,\n            edad INTEGER\n        )\n    \"\"\")\n</code></pre>"},{"location":"languages/Python/#insertar-datos_1","title":"Insertar datos","text":"<pre><code>cursor.execute(\"INSERT INTO usuarios (nombre, edad) VALUES (%s, %s)\", (\"Juan\", 30))\n</code></pre>"},{"location":"languages/Python/#guardar-los-cambios_1","title":"Guardar los cambios","text":"<pre><code>conexion.commit()\n</code></pre>"},{"location":"languages/Python/#obtener-datos_1","title":"Obtener datos","text":"<pre><code>cursor.execute(\"SELECT * FROM usuarios\")\n\nfilas = cursor.fetchall()\n</code></pre>"},{"location":"languages/Python/#cerrar-la-conexion","title":"Cerrar la conexi\u00f3n","text":"<pre><code>conexion.close()\n</code></pre>"},{"location":"languages/Python/#excepciones","title":"Excepciones","text":"<pre><code>Exception, psycopg2.Error\n</code></pre>"},{"location":"languages/Python/#mysql","title":"MySQL","text":"<p>NOTE Hay que instalar previamente mysql-connector-python</p> <pre><code>pip install mysql-connector-python\n</code></pre> <pre><code>import mysql.connector\n</code></pre>"},{"location":"languages/Python/#conectar-a-una-base-de-datos_2","title":"Conectar a una base de datos","text":"<pre><code>conexion = mysql.connector.connect(\n    host=\"localhost\",\n    database=\"nombre_de_la_base_de_datos\",\n    user=\"nombre_de_usuario\",\n    password=\"contrase\u00f1a\"\n)\n</code></pre>"},{"location":"languages/Python/#crear-un-cursor_2","title":"Crear un cursor","text":"<pre><code>cursor = conexion.cursor()\n</code></pre>"},{"location":"languages/Python/#crear-una-tabla_2","title":"Crear una tabla","text":"<pre><code>cursor.execute(\"\"\"\n        CREATE TABLE IF NOT EXISTS usuarios (\n            id SERIAL PRIMARY KEY,\n            nombre TEXT,\n            edad INTEGER\n        )\n    \"\"\")\n</code></pre>"},{"location":"languages/Python/#insertar-datos_2","title":"Insertar datos","text":"<pre><code>cursor.execute(\"INSERT INTO usuarios (nombre, edad) VALUES (%s, %s)\", (\"Juan\", 30))\n</code></pre>"},{"location":"languages/Python/#guardar-los-cambios_2","title":"Guardar los cambios","text":"<pre><code>conexion.commit()\n</code></pre>"},{"location":"languages/Python/#obtener-datos_2","title":"Obtener datos","text":"<pre><code>cursor.execute(\"SELECT * FROM usuarios\")\n\nfilas = cursor.fetchall()\n</code></pre>"},{"location":"languages/Python/#cerrar-la-conexion_1","title":"Cerrar la conexi\u00f3n","text":"<pre><code>conexion.close()\n</code></pre>"},{"location":"languages/Python/#excepciones_1","title":"Excepciones","text":"<pre><code>mysql.connector.Error\n</code></pre>"},{"location":"languages/Python/#mongodb","title":"MongoDB","text":"<p>NOTE Hay que instalar previamente pymongo</p> <pre><code>pip install pymongo\n</code></pre> <pre><code>from pymongo import MongoClient\n</code></pre>"},{"location":"languages/Python/#conectarse-a-un-servidor-de-mongodb","title":"Conectarse a un servidor de MongoDB","text":"<pre><code>cliente = MongoClient('mongodb://localhost:27017/')\n</code></pre>"},{"location":"languages/Python/#conectarse-a-una-base-de-datos-en-mongodb","title":"Conectarse a una base de datos en MongoDB","text":"<p>db = cliente['nombre_de_la_base_de_datos']</p>"},{"location":"languages/Python/#insertar-datos_3","title":"Insertar datos","text":"<pre><code>datos = [\n    {\"nombre\": \"Juan\", \"edad\": 30},\n    {\"nombre\": \"Mar\u00eda\", \"edad\": 25},\n    {\"nombre\": \"Pedro\", \"edad\": 40}\n]\n\ncoleccion.insert_many(datos)\n</code></pre>"},{"location":"languages/Python/#leer-datos","title":"Leer datos","text":"<pre><code>coleccion = db['nombre_de_la_coleccion']\n\ndocumentos = coleccion.find()\n</code></pre>"},{"location":"languages/bashScript/","title":"Bash Script","text":"<pre><code>#!/bin/bash\n\necho \"Bienvenido a BASH\"\n\n</code></pre>"},{"location":"others/markdown/","title":"Markdown","text":"<p>Markdown es un lenguaje de marcado ligero que se utiliza para formatear texto. Es f\u00e1cil de leer y escribir, y se convierte en HTML de manera sencilla.</p>"},{"location":"others/markdown/#encabezados","title":"Encabezados","text":"<p>Puedes crear encabezados utilizando el s\u00edmbolo <code>#</code>. El n\u00famero de <code>#</code> indica el nivel del encabezado.</p> <pre><code># Encabezado 1\n\n## Encabezado 2\n\n### Encabezado 3\n\n#### Encabezado 4\n\n##### Encabezado 5\n\n###### Encabezado 6\n</code></pre>"},{"location":"others/markdown/#enfasis","title":"\u00c9nfasis","text":"<p>Puedes agregar \u00e9nfasis al texto utilizando asteriscos * o guiones bajos _.</p> <ul> <li>Negrita: Envuelve el texto con 2 asteriscos o 2 guiones bajos. <code>**negrita**</code></li> <li>Cursiva: Envuelve el texto con 1 asterisco o un 1 gui\u00f3n bajo. <code>*cursiva*</code></li> <li>Negrita y Cursiva: Usa 3 asteriscos o 3 guiones bajos. <code>***negrita y cursiva***</code></li> </ul>"},{"location":"others/markdown/#listas","title":"Listas","text":"<p>Puedes anidar listas utilizando espacios o tabulaciones antes del marcador de la lista.</p>"},{"location":"others/markdown/#listas-ordenadas","title":"Listas ordenadas","text":"<p>Utiliza n\u00fameros seguidos de un punto para crear listas ordenadas.</p> <pre><code>1. Primer \u00edtem\n2. Segundo \u00edtem\n3. Tercer \u00edtem\n</code></pre>"},{"location":"others/markdown/#listas-desordenadas","title":"Listas desordenadas","text":"<p>Utiliza asteriscos *, signos m\u00e1s + o guiones - para listas desordenadas.</p> <pre><code>- Primer \u00edtem\n- Segundo \u00edtem\n- Tercer \u00edtem\n</code></pre>"},{"location":"others/markdown/#enlaces","title":"Enlaces","text":"<p>Puedes crear enlaces utilizando corchetes [] para el texto del enlace y par\u00e9ntesis () para la URL.</p> <pre><code>[Texto del enlace](https://www.ejemplo.com)\n</code></pre> <p>Tambien se pueden crear atajos a los enlaces:</p> <pre><code>[Nombre del enlace][Referencia al enlace]\n\n[Referencia al enlace]: https://www.ejemplo.com\n</code></pre>"},{"location":"others/markdown/#citas","title":"Citas","text":"<p>Para crear citas, utiliza el s\u00edmbolo &gt;.</p> <pre><code>&gt; Esta es una cita.\n</code></pre> <p>Tambi\u00e9n existen citas especiales que se embellecen en github</p> <pre><code>&gt; [!NOTE]\n&gt; Esta es una cita.\n</code></pre>"},{"location":"others/markdown/#tablas","title":"Tablas","text":"<p>Puedes crear tablas utilizando guiones - para la l\u00ednea de encabezado y barras verticales | para separar columnas.</p> <pre><code>| Encabezado 1  | Encabezado 2  |\n| ------------- | ------------- |\n| Fila 1, Col 1 | Fila 1, Col 2 |\n| Fila 2, Col 1 | Fila 2, Col 2 |\n</code></pre>"},{"location":"others/markdown/#codigo","title":"C\u00f3digo","text":""},{"location":"others/markdown/#codigo-en-linea","title":"C\u00f3digo en L\u00ednea","text":"<p>Para c\u00f3digo en l\u00ednea, usa comillas simples invertidas `.</p> <pre><code>Este es un ejemplo de `c\u00f3digo en l\u00ednea`.\n</code></pre>"},{"location":"others/markdown/#bloques-de-codigo","title":"Bloques de C\u00f3digo","text":"<p>Para bloques de c\u00f3digo, utiliza tres comillas simples invertidas ``` antes y despu\u00e9s del c\u00f3digo. Puedes especificar el lenguaje de programaci\u00f3n para resaltado de sintaxis.</p> <pre><code>```java\nSystem.out.println(\"Hola mund0\");\n```\n</code></pre> <p>Para mostrar un bloque de c\u00f3digo de markdown dentro de un bloque de c\u00f3digo simplemnete se usan mas comillas simples invertidas en el bloque de c\u00f3digo externo.</p>"},{"location":"others/markdown/#lenguajes","title":"Lenguajes","text":"<p>En la siguiente tabla se muestra una lista de lenguajes de prograci\u00f3n admitidos por Linguistic, el sistema de resaltado de c\u00f3digo de GitHub:</p> Lenguaje Alias Lenguaje Alias Lenguaje Alias Bash / Shell <code>bash</code>, <code>sh</code>, <code>shell</code> Java <code>java</code> Python <code>python</code>, <code>py</code> C <code>c</code> JavaScript <code>javascript</code>, <code>js</code> Ruby <code>ruby</code>, <code>rb</code> C++ <code>cpp</code>, <code>c++</code> JSON <code>json</code> Rust <code>rust</code> C# <code>csharp</code>, <code>cs</code> Kotlin <code>kotlin</code> SQL <code>sql</code> CSS <code>css</code> Markdown <code>markdown</code>, <code>md</code> Swift <code>swift</code> Diff <code>diff</code> Objective-C <code>objective-c</code>, <code>objc</code> TypeScript <code>typescript</code>, <code>ts</code> Go <code>go</code> Perl <code>perl</code>, <code>pl</code> XML <code>xml</code> HTML <code>html</code> PHP <code>php</code> YAML <code>yaml</code>, <code>yml</code>"},{"location":"others/markdown/#lineas-horizontales","title":"L\u00edneas horizontales","text":"<p>Para agregar una l\u00ednea horizontal, utiliza tres o m\u00e1s guiones, asteriscos, o guiones bajos.</p> <pre><code>---\n</code></pre>"},{"location":"others/markdown/#escapando-caracteres","title":"Escapando caracteres","text":"<p>Si necesitas usar un car\u00e1cter especial literalmente, esc\u00e1palo con una barra invertida .</p> <pre><code>\\*Este texto no estar\u00e1 en cursiva\\*\n</code></pre>"}]}